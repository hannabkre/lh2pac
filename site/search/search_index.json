{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Overall aircraft design (OAD)","text":"<p>An OAD is a multidisciplinary design process considering various disciplines  such as flight mission, aerodynamics, structural sizing, mass distributions, propulsion, systems, etc.</p>"},{"location":"#motivations","title":"Motivations","text":"<p>The aim of this project is to do OAD by combining several models with three mathematical fields, namely surrogate modeling, uncertainty quantification and optimization:</p> <ul> <li>optimization algorithms are commonly used to solve design problems,   with the multidisciplinary-design optimization (MDO) branch in the case of several models, a.k.a. disciplines,</li> <li>uncertainty quantification (UQ) is becoming increasingly popular    to take into account various sources of uncertainties   that may occur during the design cycle,</li> <li>surrogate models, a.k.a. metamodels, are enablers for optimization and UQ   because the numerical simulators are often computationally expensive   and do not allow a sufficient number of evaluations to be obtained    to estimate statistics properly or to converge a numerical optimization algorithm.</li> </ul>"},{"location":"#problems","title":"Problems","text":""},{"location":"#introduction","title":"Introduction","text":"<p>The design problem aims to minimize the maximal take-off mass of an aircraft whilst ensuring some constraints  such as a maximal take-off field length and a maximal approach speed.</p> <p>For this purpose, it will be possible to play with four design parameters.</p> <p>By the way, the design takes place in an uncertain environment where the technological choices can be probabilized.</p> <p>In the following, we will note \\(f:x,u\\mapsto f(x,u)\\) the outputs of interest of the models where \\(x\\) are the design parameters and \\(u\\) the uncertain ones.</p> <p>We will assume that their evaluation cost is very high, and so we will try to replace \\(f\\) with a surrogate model to address the following problem. </p>"},{"location":"#problem-1-surrogate-modeling-and-optimization","title":"Problem 1 - Surrogate modeling and optimization","text":"<p>We will create a surrogate model of \\(\\hat{f}:x\\mapsto \\hat{f}(x)=f(x,u_{\\mathrm{default}})\\) to approximate the objective and constraints of the design problem with respect to the design parameters \\(x\\). Then, we will use this surrogate model in an optimization process to minimize the objective whilst ensuring the constraints by varying the design parameters.</p>"},{"location":"#problem-2-surrogate-modeling-and-uncertainty-quantification","title":"Problem 2 - Surrogate modeling and uncertainty quantification","text":"<p>We will create a surrogate model of \\(\\hat{f}:u\\mapsto \\hat{f}(x)=f(x_{\\mathrm{default}},u)\\) to approximate the objective and constraints of the design problem with respect to the uncertain parameters \\(u\\). Then, we will use this surrogate model in an uncertainty study to propagate the uncertainty related to the technological choices, quantify the resulting output uncertainty and explain it from the uncertainty sources (sensitivity analysis).</p>"},{"location":"#problem-3-surrogate-modeling-and-robust-optimization","title":"Problem 3 - Surrogate modeling and robust optimization","text":"<p>We will create a surrogate model of \\(\\hat{f}:x,u\\mapsto \\hat{f}(x)=f(x,u)\\) to approximate the objective and constraints of the design problem with respect to both design parameters \\(x\\) and uncertain parameters \\(u\\). Then, we will use this surrogate model to to seek the best aircraft concept taking into account the uncertainty of technological choices.</p>"},{"location":"#software","title":"Software","text":"<p>To solve these problems, we will use the GEMSEO Python library  for problem definition, optimization, surrogate modeling and uncertainty quantification. GEMSEO relies on popular Python libraries, such as  scikit-learn for surrogate modeling, OpenTURNS for uncertainty quantification, NumPy and SciPy for scientific computing and matplotlib for visualization.</p> <p>GEMSEO includes the main package gemseo as well as extensions and plugins. In particular, we will use:</p> <ul> <li>gemseo-oad-training   (documentation)   to create the models and their settings,</li> <li>gemseo-umdo   (documentation)   for MDO under uncertainty,</li> <li>gemseo-mlearning   (documentation)   for advanced machine learning techniques.</li> </ul>"},{"location":"#what-should-i-do","title":"What should I do?","text":"<ol> <li>Discover GEMSEO through these examples and the software documentations.</li> <li>Read the descriptions of the use cases.</li> <li>Solve Problem 1 for Use Case 1 and Use Case 2.</li> <li>Solve Problem 2 for Use Case 1 and Use Case 2<ul> <li>at the initial design,</li> <li>at the optimal design found at Step 4.</li> </ul> </li> <li>Solve Problem 3 for Use Case 1 and Use Case 2.</li> <li>Write the report.</li> </ol>"},{"location":"generated/scripts/examples/","title":"Examples","text":"<p> Draw an aircraft </p> <p> Convert units </p> <p> Create a discipline from a Python function </p> <p> Create a design space </p> <p> Use a design of experiments </p> <p> Perform a sensitivity analysis </p> <p> Solve an optimization problem </p> <p> Create an uncertain space </p> <p> Propagate uncertainties </p> <p> Create a surrogate model </p> <p> Download all examples in Python source code: examples_python.zip</p> <p> Download all examples in Jupyter notebooks: examples_jupyter.zip</p> <p>Gallery generated by mkdocs-gallery</p>"},{"location":"generated/scripts/examples/mg_execution_times/","title":"Computation times","text":"<p>00:12.844 total execution time for generated_scripts_examples files:</p> <p>+---------------------------------------------------------------------------------------------------------------------------+-----------+--------+ | plot_draw_aicraft (docs/scripts/examples/plot_draw_aicraft.py)                                  | 00:04.792 | 0.0 MB | +---------------------------------------------------------------------------------------------------------------------------+-----------+--------+ | plot_sensitivity_analysis (docs/scripts/examples/plot_sensitivity_analysis.py)          | 00:04.666 | 0.0 MB | +---------------------------------------------------------------------------------------------------------------------------+-----------+--------+ | plot_optimization (docs/scripts/examples/plot_optimization.py)                                  | 00:01.672 | 0.0 MB | +---------------------------------------------------------------------------------------------------------------------------+-----------+--------+ | plot_surrogate (docs/scripts/examples/plot_surrogate.py)                                           | 00:00.801 | 0.0 MB | +---------------------------------------------------------------------------------------------------------------------------+-----------+--------+ | plot_uncertainty_propagation (docs/scripts/examples/plot_uncertainty_propagation.py) | 00:00.669 | 0.0 MB | +---------------------------------------------------------------------------------------------------------------------------+-----------+--------+ | plot_doe (docs/scripts/examples/plot_doe.py)                                                             | 00:00.171 | 0.0 MB | +---------------------------------------------------------------------------------------------------------------------------+-----------+--------+ | plot_autopydiscipline (docs/scripts/examples/plot_autopydiscipline.py)                      | 00:00.054 | 0.0 MB | +---------------------------------------------------------------------------------------------------------------------------+-----------+--------+ | plot_uncertain_space (docs/scripts/examples/plot_uncertain_space.py)                         | 00:00.011 | 0.0 MB | +---------------------------------------------------------------------------------------------------------------------------+-----------+--------+ | plot_design_space (docs/scripts/examples/plot_design_space.py)                                  | 00:00.006 | 0.0 MB | +---------------------------------------------------------------------------------------------------------------------------+-----------+--------+ | plot_unit_conversion (docs/scripts/examples/plot_unit_conversion.py)                         | 00:00.002 | 0.0 MB | +---------------------------------------------------------------------------------------------------------------------------+-----------+--------+</p>"},{"location":"generated/scripts/examples/plot_autopydiscipline/","title":"Create a discipline from a Python function","text":"<p>Note</p> <p>Click here to download the full example code</p>"},{"location":"generated/scripts/examples/plot_autopydiscipline/#create-a-discipline-from-a-python-function","title":"Create a discipline from a Python function","text":"<pre><code>from gemseo.disciplines.auto_py import AutoPyDiscipline\n</code></pre> <p>Let us consider the Python function computing the area of a rectangle:</p> <pre><code>def compute_area(width: float = 1., length: float = 1.) -&gt; float:\n    \"\"\"Compute the area of a rectangle.\n\n    Args:\n        width: The width of the rectangle.\n        length: The length of the rectangle.\n\n    Returns:\n        The area of the rectangle.\n    \"\"\"\n    area = width * length\n    return area\n</code></pre> <p>We can easily a GEMSEO discipline from this Python function:</p> <pre><code>discipline = AutoPyDiscipline(compute_area)\n</code></pre> <p>By default, its execution evaluates the Python functions using its default argument values:</p> <pre><code>discipline.execute()\n</code></pre> <p>Out:</p> <pre><code>{'width': 1.0, 'length': 1.0, 'area': 1.0}\n</code></pre> <p>We can change the value of the width:</p> <pre><code>discipline.execute({\"width\": 2.})\n</code></pre> <p>Out:</p> <pre><code>{'width': 2.0, 'length': 1.0, 'area': 2.0}\n</code></pre> <p>of the length:</p> <pre><code>discipline.execute({\"length\": 3.})\n</code></pre> <p>Out:</p> <pre><code>{'width': 1.0, 'length': 3.0, 'area': 3.0}\n</code></pre> <p>of the width and the length:</p> <pre><code>discipline.execute({\"width\": 2., \"length\": 3.})\n</code></pre> <p>Out:</p> <pre><code>{'width': 2.0, 'length': 3.0, 'area': 6.0}\n</code></pre> <p>Total running time of the script: ( 0 minutes  0.054 seconds)</p> <p> Download Python source code: plot_autopydiscipline.py</p> <p> Download Jupyter notebook: plot_autopydiscipline.ipynb</p> <p>Gallery generated by mkdocs-gallery</p>"},{"location":"generated/scripts/examples/plot_design_space/","title":"Create a design space","text":"<p>Note</p> <p>Click here to download the full example code</p>"},{"location":"generated/scripts/examples/plot_design_space/#create-a-design-space","title":"Create a design space","text":"<p>A <code>DesignSpace</code> defines the space in which the design variables belongs and is required to set the optimization problem, in the same way as the objective and the constraints.</p>"},{"location":"generated/scripts/examples/plot_design_space/#create-a-design-space_1","title":"Create a design space","text":"<p>The simplest is to use the function <code>create_design_space</code>:</p> <pre><code>from numpy import array\n\nfrom gemseo.algos.design_space import DesignSpace\n\ndesign_space = DesignSpace()\n</code></pre> <p>This design space can include a design variable \\(x\\) without bounds and without current value:</p> <pre><code>design_space.add_variable(\"x\")\n</code></pre> <p>a design variable \\(y\\) of dimension 2 with a lower bound and a current value:</p> <pre><code>design_space.add_variable(\"y\", size=2, lower_bound=0.0, value=array([0.5, 0.75]))\n</code></pre> <p>as well as a design variable \\(z\\) with both lower and upper bounds but without default value:</p> <pre><code>design_space.add_variable(\"z\", lower_bound=-1.0, upper_bound=1.0)\n</code></pre> <p>Let's take a look at this design space:</p> <pre><code>design_space\n</code></pre> Design space: Name Lower bound Value Upper bound Type x -inf None inf float y[0] 0 0.5 inf float y[1] 0 0.75 inf float z -1 None 1 float"},{"location":"generated/scripts/examples/plot_design_space/#create-a-class-of-design-space","title":"Create a class of design space","text":"<p>If we want to use this design space more than once, it can be more convenient and Pythonic to use the object-oriented paradigm and subclass <code>DesignSpace</code>:</p> <pre><code>class MyDesignSpace(DesignSpace):\n    def __init__(self):\n        super().__init__(name=\"foo\")\n        self.add_variable(\"x\")\n        self.add_variable(\"y\", size=2, lower_bound=0.0, value=array([0.5, 0.75]))\n        self.add_variable(\"z\", lower_bound=-1.0, upper_bound=1.0)\n</code></pre> <p>Then, we only have to instantiate <code>MyDesignSpace</code>:</p> <pre><code>design_space = MyDesignSpace()\ndesign_space\n</code></pre> My design space: foo Name Lower bound Value Upper bound Type x -inf None inf float y[0] 0 0.5 inf float y[1] 0 0.75 inf float z -1 None 1 float <p>Total running time of the script: ( 0 minutes  0.006 seconds)</p> <p> Download Python source code: plot_design_space.py</p> <p> Download Jupyter notebook: plot_design_space.ipynb</p> <p>Gallery generated by mkdocs-gallery</p>"},{"location":"generated/scripts/examples/plot_doe/","title":"Use a design of experiments","text":"<p>Note</p> <p>Click here to download the full example code</p>"},{"location":"generated/scripts/examples/plot_doe/#use-a-design-of-experiments","title":"Use a design of experiments","text":"<p>The <code>DOEScenario</code> defines an evaluation problem from one or more disciplines, a design space and a DOE (design of experiments) algorithm.</p> <p>In this example, we want to sample the Rosenbrock function \\(f(x,y)=(1-x)^2+100*(y-x^2)^2\\) over the design space \\([-2,2]^2\\) with a latin hypercube sampling (LHS) algorithm improved by simulated annealing.</p> <pre><code>from gemseo import configure_logger\nfrom gemseo.algos.design_space import DesignSpace\nfrom gemseo.disciplines.analytic import AnalyticDiscipline\nfrom gemseo.scenarios.doe_scenario import DOEScenario\n</code></pre> <p>First, we activate the logger.</p> <pre><code>configure_logger()\n</code></pre> <p>Out:</p> <pre><code>&lt;RootLogger root (INFO)&gt;\n</code></pre> <p>Then, we create a discipline to evaluate \\((1-x)^2+100*(y-x^2)^2\\):</p> <pre><code>discipline = AnalyticDiscipline(\n    {\"z\": \"(1-x)**2+100*(y-x**2)**2\"},\n    name=\"Rosenbrock\",\n)\n</code></pre> <p>Note</p> <p>The <code>AnalyticDiscipline</code> allows us to define functions from strings and automatically get the expression of the derivatives, based on sympy, a Python library for symbolic mathematics.</p> <p>Then, we create the design space \\([-2,2]^2\\):</p> <pre><code>design_space = DesignSpace()\ndesign_space.add_variable(\"x\", lower_bound=-2, upper_bound=2)\ndesign_space.add_variable(\"y\", lower_bound=-2, upper_bound=2)\n</code></pre> <p>Thirdly, we create a <code>DOEScenario</code> from this discipline and this design space:</p> <pre><code>disciplines = [discipline]\nscenario = DOEScenario(disciplines, \"z\", design_space, formulation_name=\"DisciplinaryOpt\")\n</code></pre> <p>Note</p> <p><code>\"DisciplinaryOpt\"</code> means that we evaluate the <code>disciplines</code> sequentially; then, if the output of a discipline is the input of one of the following, its value will be used (in this case, there is only one discipline but the argument is mandatory).</p> <p>Note</p> <p>In the case where there is more than one output of interest, you can use the method <code>add_observable</code> to store the evaluations of the other outputs of interest:</p> <pre><code>   scenario = create_scenario(\n       disciplines, \"DisciplinaryOpt\", \"foo\", design_space, scenario_type=\"DOE\"\n   )\n   scenario.add_observable(\"bar\")\n   scenario.add_observable(\"baz\")\n</code></pre> <p>Now, we can sample the discipline to get 100 evaluations of the triple \\((x,y,z)\\):</p> <pre><code>scenario.execute(algo_name=\"OT_OPT_LHS\", n_samples=100)\n</code></pre> <p>Out:</p> <pre><code>    INFO - 15:34:18: *** Start DOEScenario execution ***\n    INFO - 15:34:18: DOEScenario\n    INFO - 15:34:18:    Disciplines: Rosenbrock\n    INFO - 15:34:18:    MDO formulation: DisciplinaryOpt\n    INFO - 15:34:18: Optimization problem:\n    INFO - 15:34:18:    minimize z(x, y)\n    INFO - 15:34:18:    with respect to x, y\n    INFO - 15:34:18:    over the design space:\n    INFO - 15:34:18:       +------+-------------+-------+-------------+-------+\n    INFO - 15:34:18:       | Name | Lower bound | Value | Upper bound | Type  |\n    INFO - 15:34:18:       +------+-------------+-------+-------------+-------+\n    INFO - 15:34:18:       | x    |      -2     |  None |      2      | float |\n    INFO - 15:34:18:       | y    |      -2     |  None |      2      | float |\n    INFO - 15:34:18:       +------+-------------+-------+-------------+-------+\n    INFO - 15:34:18: Solving optimization problem with algorithm OT_OPT_LHS:\n    INFO - 15:34:18:      1%|          | 1/100 [00:00&lt;00:00, 422.86 it/sec, obj=2.19e+3]\n    INFO - 15:34:18:      2%|\u258f         | 2/100 [00:00&lt;00:00, 655.05 it/sec, obj=1.07e+3]\n    INFO - 15:34:18:      3%|\u258e         | 3/100 [00:00&lt;00:00, 859.25 it/sec, obj=675]\n    INFO - 15:34:18:      4%|\u258d         | 4/100 [00:00&lt;00:00, 1030.16 it/sec, obj=1.15e+3]\n    INFO - 15:34:18:      5%|\u258c         | 5/100 [00:00&lt;00:00, 1182.89 it/sec, obj=2.51e+3]\n    INFO - 15:34:18:      6%|\u258c         | 6/100 [00:00&lt;00:00, 1313.11 it/sec, obj=30.7]\n    INFO - 15:34:18:      7%|\u258b         | 7/100 [00:00&lt;00:00, 1429.69 it/sec, obj=2.18e+3]\n    INFO - 15:34:18:      8%|\u258a         | 8/100 [00:00&lt;00:00, 1533.22 it/sec, obj=885]\n    INFO - 15:34:18:      9%|\u2589         | 9/100 [00:00&lt;00:00, 1617.20 it/sec, obj=53.1]\n    INFO - 15:34:18:     10%|\u2588         | 10/100 [00:00&lt;00:00, 1699.47 it/sec, obj=994]\n    INFO - 15:34:18:     11%|\u2588         | 11/100 [00:00&lt;00:00, 1772.67 it/sec, obj=169]\n    INFO - 15:34:18:     12%|\u2588\u258f        | 12/100 [00:00&lt;00:00, 1837.39 it/sec, obj=735]\n    INFO - 15:34:18:     13%|\u2588\u258e        | 13/100 [00:00&lt;00:00, 1873.68 it/sec, obj=0.9]\n    INFO - 15:34:18:     14%|\u2588\u258d        | 14/100 [00:00&lt;00:00, 1907.49 it/sec, obj=244]\n    INFO - 15:34:18:     15%|\u2588\u258c        | 15/100 [00:00&lt;00:00, 1946.61 it/sec, obj=266]\n    INFO - 15:34:18:     16%|\u2588\u258c        | 16/100 [00:00&lt;00:00, 1986.29 it/sec, obj=26.2]\n    INFO - 15:34:18:     17%|\u2588\u258b        | 17/100 [00:00&lt;00:00, 2024.22 it/sec, obj=203]\n    INFO - 15:34:18:     18%|\u2588\u258a        | 18/100 [00:00&lt;00:00, 2057.10 it/sec, obj=435]\n    INFO - 15:34:18:     19%|\u2588\u2589        | 19/100 [00:00&lt;00:00, 2094.84 it/sec, obj=186]\n    INFO - 15:34:18:     20%|\u2588\u2588        | 20/100 [00:00&lt;00:00, 2123.05 it/sec, obj=501]\n    INFO - 15:34:18:     21%|\u2588\u2588        | 21/100 [00:00&lt;00:00, 2155.50 it/sec, obj=82.9]\n    INFO - 15:34:18:     22%|\u2588\u2588\u258f       | 22/100 [00:00&lt;00:00, 2188.00 it/sec, obj=8.31]\n    INFO - 15:34:18:     23%|\u2588\u2588\u258e       | 23/100 [00:00&lt;00:00, 2217.07 it/sec, obj=6.15]\n    INFO - 15:34:18:     24%|\u2588\u2588\u258d       | 24/100 [00:00&lt;00:00, 2245.14 it/sec, obj=60.3]\n    INFO - 15:34:18:     25%|\u2588\u2588\u258c       | 25/100 [00:00&lt;00:00, 2274.42 it/sec, obj=323]\n    INFO - 15:34:18:     26%|\u2588\u2588\u258c       | 26/100 [00:00&lt;00:00, 2299.95 it/sec, obj=94.4]\n    INFO - 15:34:18:     27%|\u2588\u2588\u258b       | 27/100 [00:00&lt;00:00, 2325.15 it/sec, obj=2.01]\n    INFO - 15:34:18:     28%|\u2588\u2588\u258a       | 28/100 [00:00&lt;00:00, 2345.57 it/sec, obj=1.87]\n    INFO - 15:34:18:     29%|\u2588\u2588\u2589       | 29/100 [00:00&lt;00:00, 2366.53 it/sec, obj=1.93e+3]\n    INFO - 15:34:18:     30%|\u2588\u2588\u2588       | 30/100 [00:00&lt;00:00, 2385.61 it/sec, obj=247]\n    INFO - 15:34:18:     31%|\u2588\u2588\u2588       | 31/100 [00:00&lt;00:00, 2406.24 it/sec, obj=58.4]\n    INFO - 15:34:18:     32%|\u2588\u2588\u2588\u258f      | 32/100 [00:00&lt;00:00, 2426.03 it/sec, obj=3.72]\n    INFO - 15:34:18:     33%|\u2588\u2588\u2588\u258e      | 33/100 [00:00&lt;00:00, 2442.98 it/sec, obj=160]\n    INFO - 15:34:18:     34%|\u2588\u2588\u2588\u258d      | 34/100 [00:00&lt;00:00, 2464.42 it/sec, obj=335]\n    INFO - 15:34:18:     35%|\u2588\u2588\u2588\u258c      | 35/100 [00:00&lt;00:00, 2482.55 it/sec, obj=333]\n    INFO - 15:34:18:     36%|\u2588\u2588\u2588\u258c      | 36/100 [00:00&lt;00:00, 2500.74 it/sec, obj=590]\n    INFO - 15:34:18:     37%|\u2588\u2588\u2588\u258b      | 37/100 [00:00&lt;00:00, 2516.69 it/sec, obj=1.5e+3]\n    INFO - 15:34:18:     38%|\u2588\u2588\u2588\u258a      | 38/100 [00:00&lt;00:00, 2533.11 it/sec, obj=67.5]\n    INFO - 15:34:18:     39%|\u2588\u2588\u2588\u2589      | 39/100 [00:00&lt;00:00, 2548.42 it/sec, obj=848]\n    INFO - 15:34:18:     40%|\u2588\u2588\u2588\u2588      | 40/100 [00:00&lt;00:00, 2564.46 it/sec, obj=688]\n    INFO - 15:34:18:     41%|\u2588\u2588\u2588\u2588      | 41/100 [00:00&lt;00:00, 2579.02 it/sec, obj=8.1]\n    INFO - 15:34:18:     42%|\u2588\u2588\u2588\u2588\u258f     | 42/100 [00:00&lt;00:00, 2594.57 it/sec, obj=2.39e+3]\n    INFO - 15:34:18:     43%|\u2588\u2588\u2588\u2588\u258e     | 43/100 [00:00&lt;00:00, 2607.46 it/sec, obj=1.06e+3]\n    INFO - 15:34:18:     44%|\u2588\u2588\u2588\u2588\u258d     | 44/100 [00:00&lt;00:00, 2621.96 it/sec, obj=22]\n    INFO - 15:34:18:     45%|\u2588\u2588\u2588\u2588\u258c     | 45/100 [00:00&lt;00:00, 2634.58 it/sec, obj=294]\n    INFO - 15:34:18:     46%|\u2588\u2588\u2588\u2588\u258c     | 46/100 [00:00&lt;00:00, 2646.10 it/sec, obj=1.04e+3]\n    INFO - 15:34:18:     47%|\u2588\u2588\u2588\u2588\u258b     | 47/100 [00:00&lt;00:00, 2659.10 it/sec, obj=29.5]\n    INFO - 15:34:18:     48%|\u2588\u2588\u2588\u2588\u258a     | 48/100 [00:00&lt;00:00, 2671.60 it/sec, obj=165]\n    INFO - 15:34:18:     49%|\u2588\u2588\u2588\u2588\u2589     | 49/100 [00:00&lt;00:00, 2682.55 it/sec, obj=261]\n    INFO - 15:34:18:     50%|\u2588\u2588\u2588\u2588\u2588     | 50/100 [00:00&lt;00:00, 2693.53 it/sec, obj=55.2]\n    INFO - 15:34:18:     51%|\u2588\u2588\u2588\u2588\u2588     | 51/100 [00:00&lt;00:00, 2705.66 it/sec, obj=388]\n    INFO - 15:34:18:     52%|\u2588\u2588\u2588\u2588\u2588\u258f    | 52/100 [00:00&lt;00:00, 2714.90 it/sec, obj=358]\n    INFO - 15:34:18:     53%|\u2588\u2588\u2588\u2588\u2588\u258e    | 53/100 [00:00&lt;00:00, 2723.91 it/sec, obj=1.04e+3]\n    INFO - 15:34:18:     54%|\u2588\u2588\u2588\u2588\u2588\u258d    | 54/100 [00:00&lt;00:00, 2732.64 it/sec, obj=16.7]\n    INFO - 15:34:18:     55%|\u2588\u2588\u2588\u2588\u2588\u258c    | 55/100 [00:00&lt;00:00, 2739.55 it/sec, obj=21.5]\n    INFO - 15:34:18:     56%|\u2588\u2588\u2588\u2588\u2588\u258c    | 56/100 [00:00&lt;00:00, 2747.76 it/sec, obj=84.9]\n    INFO - 15:34:18:     57%|\u2588\u2588\u2588\u2588\u2588\u258b    | 57/100 [00:00&lt;00:00, 2757.44 it/sec, obj=338]\n    INFO - 15:34:18:     58%|\u2588\u2588\u2588\u2588\u2588\u258a    | 58/100 [00:00&lt;00:00, 2766.66 it/sec, obj=869]\n    INFO - 15:34:18:     59%|\u2588\u2588\u2588\u2588\u2588\u2589    | 59/100 [00:00&lt;00:00, 2775.29 it/sec, obj=400]\n    INFO - 15:34:18:     60%|\u2588\u2588\u2588\u2588\u2588\u2588    | 60/100 [00:00&lt;00:00, 2783.86 it/sec, obj=160]\n    INFO - 15:34:18:     61%|\u2588\u2588\u2588\u2588\u2588\u2588    | 61/100 [00:00&lt;00:00, 2791.20 it/sec, obj=370]\n    INFO - 15:34:18:     62%|\u2588\u2588\u2588\u2588\u2588\u2588\u258f   | 62/100 [00:00&lt;00:00, 2798.25 it/sec, obj=274]\n    INFO - 15:34:18:     63%|\u2588\u2588\u2588\u2588\u2588\u2588\u258e   | 63/100 [00:00&lt;00:00, 2804.30 it/sec, obj=48.1]\n    INFO - 15:34:18:     64%|\u2588\u2588\u2588\u2588\u2588\u2588\u258d   | 64/100 [00:00&lt;00:00, 2810.25 it/sec, obj=1.25]\n    INFO - 15:34:18:     65%|\u2588\u2588\u2588\u2588\u2588\u2588\u258c   | 65/100 [00:00&lt;00:00, 2817.27 it/sec, obj=167]\n    INFO - 15:34:18:     66%|\u2588\u2588\u2588\u2588\u2588\u2588\u258c   | 66/100 [00:00&lt;00:00, 2824.10 it/sec, obj=91.1]\n    INFO - 15:34:18:     67%|\u2588\u2588\u2588\u2588\u2588\u2588\u258b   | 67/100 [00:00&lt;00:00, 2831.31 it/sec, obj=845]\n    INFO - 15:34:18:     68%|\u2588\u2588\u2588\u2588\u2588\u2588\u258a   | 68/100 [00:00&lt;00:00, 2838.28 it/sec, obj=5.05]\n    INFO - 15:34:18:     69%|\u2588\u2588\u2588\u2588\u2588\u2588\u2589   | 69/100 [00:00&lt;00:00, 2845.50 it/sec, obj=96]\n    INFO - 15:34:18:     70%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588   | 70/100 [00:00&lt;00:00, 2852.24 it/sec, obj=1.35e+3]\n    INFO - 15:34:18:     71%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588   | 71/100 [00:00&lt;00:00, 2859.21 it/sec, obj=74.5]\n    INFO - 15:34:18:     72%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f  | 72/100 [00:00&lt;00:00, 2864.72 it/sec, obj=463]\n    INFO - 15:34:18:     73%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e  | 73/100 [00:00&lt;00:00, 2866.01 it/sec, obj=25.2]\n    INFO - 15:34:18:     74%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d  | 74/100 [00:00&lt;00:00, 2867.90 it/sec, obj=540]\n    INFO - 15:34:18:     75%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c  | 75/100 [00:00&lt;00:00, 2873.36 it/sec, obj=59.6]\n    INFO - 15:34:18:     76%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c  | 76/100 [00:00&lt;00:00, 2877.50 it/sec, obj=43.9]\n    INFO - 15:34:18:     77%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b  | 77/100 [00:00&lt;00:00, 2883.30 it/sec, obj=211]\n    INFO - 15:34:18:     78%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a  | 78/100 [00:00&lt;00:00, 2889.30 it/sec, obj=641]\n    INFO - 15:34:18:     79%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589  | 79/100 [00:00&lt;00:00, 2894.29 it/sec, obj=101]\n    INFO - 15:34:18:     80%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588  | 80/100 [00:00&lt;00:00, 2897.69 it/sec, obj=723]\n    INFO - 15:34:18:     81%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588  | 81/100 [00:00&lt;00:00, 2901.29 it/sec, obj=82.6]\n    INFO - 15:34:18:     82%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f | 82/100 [00:00&lt;00:00, 2905.33 it/sec, obj=580]\n    INFO - 15:34:18:     83%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e | 83/100 [00:00&lt;00:00, 2908.89 it/sec, obj=35.6]\n    INFO - 15:34:18:     84%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d | 84/100 [00:00&lt;00:00, 2914.06 it/sec, obj=1.72e+3]\n    INFO - 15:34:18:     85%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c | 85/100 [00:00&lt;00:00, 2918.29 it/sec, obj=4.25]\n    INFO - 15:34:18:     86%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c | 86/100 [00:00&lt;00:00, 2921.94 it/sec, obj=113]\n    INFO - 15:34:18:     87%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b | 87/100 [00:00&lt;00:00, 2926.85 it/sec, obj=54.1]\n    INFO - 15:34:18:     88%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a | 88/100 [00:00&lt;00:00, 2931.19 it/sec, obj=2.36e+3]\n    INFO - 15:34:18:     89%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589 | 89/100 [00:00&lt;00:00, 2935.87 it/sec, obj=119]\n    INFO - 15:34:18:     90%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 90/100 [00:00&lt;00:00, 2940.02 it/sec, obj=227]\n    INFO - 15:34:18:     91%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 91/100 [00:00&lt;00:00, 2944.28 it/sec, obj=951]\n    INFO - 15:34:18:     92%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f| 92/100 [00:00&lt;00:00, 2948.63 it/sec, obj=246]\n    INFO - 15:34:18:     93%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e| 93/100 [00:00&lt;00:00, 2951.92 it/sec, obj=76.2]\n    INFO - 15:34:18:     94%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d| 94/100 [00:00&lt;00:00, 2956.42 it/sec, obj=0.75]\n    INFO - 15:34:18:     95%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c| 95/100 [00:00&lt;00:00, 2960.54 it/sec, obj=123]\n    INFO - 15:34:18:     96%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c| 96/100 [00:00&lt;00:00, 2964.35 it/sec, obj=957]\n    INFO - 15:34:18:     97%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b| 97/100 [00:00&lt;00:00, 2968.35 it/sec, obj=187]\n    INFO - 15:34:18:     98%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a| 98/100 [00:00&lt;00:00, 2972.12 it/sec, obj=122]\n    INFO - 15:34:18:     99%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589| 99/100 [00:00&lt;00:00, 2975.17 it/sec, obj=146]\n    INFO - 15:34:18:    100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 100/100 [00:00&lt;00:00, 2978.72 it/sec, obj=167]\n    INFO - 15:34:18: Optimization result:\n    INFO - 15:34:18:    Optimizer info:\n    INFO - 15:34:18:       Status: None\n    INFO - 15:34:18:       Message: None\n    INFO - 15:34:18:       Number of calls to the objective function by the optimizer: 100\n    INFO - 15:34:18:    Solution:\n    INFO - 15:34:18:       Objective: 0.7502023831914535\n    INFO - 15:34:18:       Design space:\n    INFO - 15:34:18:          +------+-------------+--------------------+-------------+-------+\n    INFO - 15:34:18:          | Name | Lower bound |       Value        | Upper bound | Type  |\n    INFO - 15:34:18:          +------+-------------+--------------------+-------------+-------+\n    INFO - 15:34:18:          | x    |      -2     | 0.6290200784167475 |      2      | float |\n    INFO - 15:34:18:          | y    |      -2     | 0.3173990065780083 |      2      | float |\n    INFO - 15:34:18:          +------+-------------+--------------------+-------------+-------+\n    INFO - 15:34:18: *** End DOEScenario execution (time: 0:00:00.045062) ***\n</code></pre> <p>Note</p> <p><code>DOEScenario</code> is mainly used to solve an optimization problem with a DOE algorithm instead of an optimization algorithm. This is the reason why the log presents an optimization problem and optimization result.</p> <p>Lastly, we can export the result to an <code>IODataset</code> which is a subclass of <code>Dataset</code>, which is a subclass of <code>pandas.DataFrame</code>:</p> <pre><code>dataset = scenario.to_dataset(opt_naming=False)\ndataset\n</code></pre> GROUP inputs outputs VARIABLE x y z COMPONENT 0 0 0 0 1.922870 -0.983117 2191.602002 1 -1.623831 -0.631063 1074.794249 2 -1.284228 -0.939310 675.278032 3 -1.404675 -1.412094 1151.744652 4 -1.948194 -1.200895 2505.048222 ... ... ... ... 95 -1.529573 -0.743620 957.019782 96 -0.030064 -1.364104 187.385541 97 1.278946 0.531163 122.078532 98 -0.501204 1.450870 146.173021 99 0.100055 1.297336 166.530600 <p>100 rows \u00d7 3 columns</p> <p>Seealso</p> <ul> <li>Dataset examples</li> <li>DOE examples</li> </ul> <p>Total running time of the script: ( 0 minutes  0.171 seconds)</p> <p> Download Python source code: plot_doe.py</p> <p> Download Jupyter notebook: plot_doe.ipynb</p> <p>Gallery generated by mkdocs-gallery</p>"},{"location":"generated/scripts/examples/plot_draw_aicraft/","title":"Draw an aircraft","text":"<p>Note</p> <p>Click here to download the full example code</p>"},{"location":"generated/scripts/examples/plot_draw_aicraft/#draw-an-aircraft","title":"Draw an aircraft","text":"<pre><code>from gemseo_oad_training.utils import draw_aircraft\n</code></pre> <p>First, we draw the default aircraft:</p> <pre><code>draw_aircraft()\n</code></pre> <p></p> <p>Then, we draw an aircraft with a larger wing area:</p> <pre><code>draw_aircraft(area=200, title=\"Area = 200\")\n</code></pre> <p></p> <p>Lastly, we draw an aircraft with a smaller wing area:</p> <pre><code>draw_aircraft(area=80, title=\"Area = 80\")\n</code></pre> <p></p> <p>Total running time of the script: ( 0 minutes  4.792 seconds)</p> <p> Download Python source code: plot_draw_aicraft.py</p> <p> Download Jupyter notebook: plot_draw_aicraft.ipynb</p> <p>Gallery generated by mkdocs-gallery</p>"},{"location":"generated/scripts/examples/plot_optimization/","title":"Solve an optimization problem","text":"<p>Note</p> <p>Click here to download the full example code</p>"},{"location":"generated/scripts/examples/plot_optimization/#solve-an-optimization-problem","title":"Solve an optimization problem","text":"<p>We want to minimize the Rosenbrock function \\(f(x,y)=(1-x)^2+100(y-x**2)^2\\) over the domain \\([-2,2]^2\\).</p> <pre><code>from gemseo import configure_logger\nfrom gemseo.algos.design_space import DesignSpace\nfrom gemseo.disciplines.analytic import AnalyticDiscipline\nfrom gemseo.scenarios.mdo_scenario import MDOScenario\n</code></pre> <p>Before starting, we activate the logger as an optimization process logs meaningful information.</p> <pre><code>configure_logger()\n</code></pre> <p>Out:</p> <pre><code>&lt;RootLogger root (INFO)&gt;\n</code></pre> <p>Firstly, we define the discipline computing the Rosenbrock function and the Euclidean distance to the optimum:</p> <pre><code>discipline = AnalyticDiscipline(\n    {\"z\": \"(1-x)**2+100*(y-x**2)**2\", \"c\": \"((x-1)**2+(y-1)**2)**0.5\"},\n    name=\"Rosenbrock\"\n)\n</code></pre> <p>Then, we create the design space:</p> <pre><code>design_space = DesignSpace()\ndesign_space.add_variable(\"x\", lower_bound=-2., upper_bound=2., value=0.)\ndesign_space.add_variable(\"y\", lower_bound=-2., upper_bound=2., value=0.)\n</code></pre> <p>Thirdly, we put these elements together in a scenario to minimize the Rosenbrock function under the constraint that the distance between the design point and the solution of the unconstrained problem is greater or equal to 1.</p> <pre><code>scenario = MDOScenario([discipline], \"z\", design_space, formulation_name=\"DisciplinaryOpt\")\nscenario.add_constraint(\"c\", constraint_type=\"ineq\", positive=True, value=1.)\n</code></pre> <p>Note</p> <p>GEMSEO is a Python library dedicated to multidisciplinary design optimization (MDO) based on the notion of MDO formulation. This is why the second positional argument <code>formulation</code> is mandatory. But when using the scenario with a unique discipline, don't bother and consider <code>\"DisciplinaryOpt\"</code>.</p> <p>before executing it with a gradient-free optimizer:</p> <pre><code>scenario.execute(algo_name=\"NLOPT_COBYLA\", max_iter=100)\n</code></pre> <p>Out:</p> <pre><code>    INFO - 15:34:23: *** Start MDOScenario execution ***\n    INFO - 15:34:23: MDOScenario\n    INFO - 15:34:23:    Disciplines: Rosenbrock\n    INFO - 15:34:23:    MDO formulation: DisciplinaryOpt\n    INFO - 15:34:23: Optimization problem:\n    INFO - 15:34:23:    minimize z(x, y)\n    INFO - 15:34:23:    with respect to x, y\n    INFO - 15:34:23:    subject to constraints:\n    INFO - 15:34:23:       c(x, y) &gt;= 1.0\n    INFO - 15:34:23:    over the design space:\n    INFO - 15:34:23:       +------+-------------+-------+-------------+-------+\n    INFO - 15:34:23:       | Name | Lower bound | Value | Upper bound | Type  |\n    INFO - 15:34:23:       +------+-------------+-------+-------------+-------+\n    INFO - 15:34:23:       | x    |      -2     |   0   |      2      | float |\n    INFO - 15:34:23:       | y    |      -2     |   0   |      2      | float |\n    INFO - 15:34:23:       +------+-------------+-------+-------------+-------+\n    INFO - 15:34:23: Solving optimization problem with algorithm NLOPT_COBYLA:\n    INFO - 15:34:23:      1%|          | 1/100 [00:00&lt;00:00, 325.22 it/sec, obj=1]\n    INFO - 15:34:23:      2%|\u258f         | 2/100 [00:00&lt;00:00, 460.38 it/sec, obj=100]\n    INFO - 15:34:23:      3%|\u258e         | 3/100 [00:00&lt;00:00, 591.22 it/sec, obj=101]\n    INFO - 15:34:23:      4%|\u258d         | 4/100 [00:00&lt;00:00, 636.08 it/sec, obj=148]\n    INFO - 15:34:23:      5%|\u258c         | 5/100 [00:00&lt;00:00, 676.26 it/sec, obj=24.8]\n    INFO - 15:34:23:      6%|\u258c         | 6/100 [00:00&lt;00:00, 705.91 it/sec, obj=3.64]\n    INFO - 15:34:23:      7%|\u258b         | 7/100 [00:00&lt;00:00, 731.04 it/sec, obj=6.11]\n    INFO - 15:34:23:      8%|\u258a         | 8/100 [00:00&lt;00:00, 753.30 it/sec, obj=1.88]\n    INFO - 15:34:23:      9%|\u2589         | 9/100 [00:00&lt;00:00, 772.10 it/sec, obj=1.4]\n    INFO - 15:34:23:     10%|\u2588         | 10/100 [00:00&lt;00:00, 777.83 it/sec, obj=0.954]\n    INFO - 15:34:23:     11%|\u2588         | 11/100 [00:00&lt;00:00, 787.41 it/sec, obj=1.21]\n    INFO - 15:34:23:     12%|\u2588\u258f        | 12/100 [00:00&lt;00:00, 795.67 it/sec, obj=0.861]\n    INFO - 15:34:23:     13%|\u2588\u258e        | 13/100 [00:00&lt;00:00, 805.95 it/sec, obj=0.88]\n    INFO - 15:34:23:     14%|\u2588\u258d        | 14/100 [00:00&lt;00:00, 815.17 it/sec, obj=0.841]\n    INFO - 15:34:23:     15%|\u2588\u258c        | 15/100 [00:00&lt;00:00, 825.28 it/sec, obj=0.833]\n    INFO - 15:34:23:     16%|\u2588\u258c        | 16/100 [00:00&lt;00:00, 835.11 it/sec, obj=0.784]\n    INFO - 15:34:23:     17%|\u2588\u258b        | 17/100 [00:00&lt;00:00, 844.64 it/sec, obj=0.762]\n    INFO - 15:34:23:     18%|\u2588\u258a        | 18/100 [00:00&lt;00:00, 846.23 it/sec, obj=0.742]\n    INFO - 15:34:23:     19%|\u2588\u2589        | 19/100 [00:00&lt;00:00, 851.66 it/sec, obj=0.749]\n    INFO - 15:34:23:     20%|\u2588\u2588        | 20/100 [00:00&lt;00:00, 857.78 it/sec, obj=0.729]\n    INFO - 15:34:23:     21%|\u2588\u2588        | 21/100 [00:00&lt;00:00, 863.88 it/sec, obj=0.727]\n    INFO - 15:34:23:     22%|\u2588\u2588\u258f       | 22/100 [00:00&lt;00:00, 866.68 it/sec, obj=0.745]\n    INFO - 15:34:23:     23%|\u2588\u2588\u258e       | 23/100 [00:00&lt;00:00, 870.62 it/sec, obj=0.713]\n    INFO - 15:34:23:     24%|\u2588\u2588\u258d       | 24/100 [00:00&lt;00:00, 873.72 it/sec, obj=0.7]\n    INFO - 15:34:23:     25%|\u2588\u2588\u258c       | 25/100 [00:00&lt;00:00, 877.35 it/sec, obj=0.688]\n    INFO - 15:34:23:     26%|\u2588\u2588\u258c       | 26/100 [00:00&lt;00:00, 881.55 it/sec, obj=0.675]\n    INFO - 15:34:23:     27%|\u2588\u2588\u258b       | 27/100 [00:00&lt;00:00, 885.37 it/sec, obj=0.664]\n    INFO - 15:34:23:     28%|\u2588\u2588\u258a       | 28/100 [00:00&lt;00:00, 885.81 it/sec, obj=0.652]\n    INFO - 15:34:23:     29%|\u2588\u2588\u2589       | 29/100 [00:00&lt;00:00, 886.26 it/sec, obj=0.64]\n    INFO - 15:34:23:     30%|\u2588\u2588\u2588       | 30/100 [00:00&lt;00:00, 888.18 it/sec, obj=0.629]\n    INFO - 15:34:23:     31%|\u2588\u2588\u2588       | 31/100 [00:00&lt;00:00, 890.86 it/sec, obj=0.618]\n    INFO - 15:34:23:     32%|\u2588\u2588\u2588\u258f      | 32/100 [00:00&lt;00:00, 891.30 it/sec, obj=0.607]\n    INFO - 15:34:23:     33%|\u2588\u2588\u2588\u258e      | 33/100 [00:00&lt;00:00, 892.89 it/sec, obj=0.596]\n    INFO - 15:34:23:     34%|\u2588\u2588\u2588\u258d      | 34/100 [00:00&lt;00:00, 891.70 it/sec, obj=0.585]\n    INFO - 15:34:23:     35%|\u2588\u2588\u2588\u258c      | 35/100 [00:00&lt;00:00, 893.40 it/sec, obj=0.576]\n    INFO - 15:34:23:     36%|\u2588\u2588\u2588\u258c      | 36/100 [00:00&lt;00:00, 893.90 it/sec, obj=0.566]\n    INFO - 15:34:23:     37%|\u2588\u2588\u2588\u258b      | 37/100 [00:00&lt;00:00, 895.99 it/sec, obj=0.544]\n    INFO - 15:34:23:     38%|\u2588\u2588\u2588\u258a      | 38/100 [00:00&lt;00:00, 896.89 it/sec, obj=0.524]\n    INFO - 15:34:23:     39%|\u2588\u2588\u2588\u2589      | 39/100 [00:00&lt;00:00, 898.19 it/sec, obj=0.513]\n    INFO - 15:34:23:     40%|\u2588\u2588\u2588\u2588      | 40/100 [00:00&lt;00:00, 899.86 it/sec, obj=0.491]\n    INFO - 15:34:23:     41%|\u2588\u2588\u2588\u2588      | 41/100 [00:00&lt;00:00, 901.83 it/sec, obj=0.511]\n    INFO - 15:34:23:     42%|\u2588\u2588\u2588\u2588\u258f     | 42/100 [00:00&lt;00:00, 901.46 it/sec, obj=0.577]\n    INFO - 15:34:23:     43%|\u2588\u2588\u2588\u2588\u258e     | 43/100 [00:00&lt;00:00, 901.28 it/sec, obj=0.527]\n    INFO - 15:34:23:     44%|\u2588\u2588\u2588\u2588\u258d     | 44/100 [00:00&lt;00:00, 902.18 it/sec, obj=0.493]\n    INFO - 15:34:23:     45%|\u2588\u2588\u2588\u2588\u258c     | 45/100 [00:00&lt;00:00, 902.35 it/sec, obj=0.485]\n    INFO - 15:34:23:     46%|\u2588\u2588\u2588\u2588\u258c     | 46/100 [00:00&lt;00:00, 903.55 it/sec, obj=0.483]\n    INFO - 15:34:23:     47%|\u2588\u2588\u2588\u2588\u258b     | 47/100 [00:00&lt;00:00, 905.48 it/sec, obj=0.511]\n    INFO - 15:34:23:     48%|\u2588\u2588\u2588\u2588\u258a     | 48/100 [00:00&lt;00:00, 907.25 it/sec, obj=0.47]\n    INFO - 15:34:23:     49%|\u2588\u2588\u2588\u2588\u2589     | 49/100 [00:00&lt;00:00, 907.43 it/sec, obj=0.468]\n    INFO - 15:34:23:     50%|\u2588\u2588\u2588\u2588\u2588     | 50/100 [00:00&lt;00:00, 908.95 it/sec, obj=0.457]\n    INFO - 15:34:23:     51%|\u2588\u2588\u2588\u2588\u2588     | 51/100 [00:00&lt;00:00, 910.45 it/sec, obj=0.449]\n    INFO - 15:34:23:     52%|\u2588\u2588\u2588\u2588\u2588\u258f    | 52/100 [00:00&lt;00:00, 910.59 it/sec, obj=0.44]\n    INFO - 15:34:23:     53%|\u2588\u2588\u2588\u2588\u2588\u258e    | 53/100 [00:00&lt;00:00, 911.55 it/sec, obj=0.431]\n    INFO - 15:34:23:     54%|\u2588\u2588\u2588\u2588\u2588\u258d    | 54/100 [00:00&lt;00:00, 912.76 it/sec, obj=0.415]\n    INFO - 15:34:23:     55%|\u2588\u2588\u2588\u2588\u2588\u258c    | 55/100 [00:00&lt;00:00, 913.33 it/sec, obj=0.411]\n    INFO - 15:34:23:     56%|\u2588\u2588\u2588\u2588\u2588\u258c    | 56/100 [00:00&lt;00:00, 915.01 it/sec, obj=0.394]\n    INFO - 15:34:23:     57%|\u2588\u2588\u2588\u2588\u2588\u258b    | 57/100 [00:00&lt;00:00, 916.28 it/sec, obj=0.422]\n    INFO - 15:34:23:     58%|\u2588\u2588\u2588\u2588\u2588\u258a    | 58/100 [00:00&lt;00:00, 916.31 it/sec, obj=0.403]\n    INFO - 15:34:23:     59%|\u2588\u2588\u2588\u2588\u2588\u2589    | 59/100 [00:00&lt;00:00, 916.30 it/sec, obj=0.393]\n    INFO - 15:34:23:     60%|\u2588\u2588\u2588\u2588\u2588\u2588    | 60/100 [00:00&lt;00:00, 917.77 it/sec, obj=0.391]\n    INFO - 15:34:23:     61%|\u2588\u2588\u2588\u2588\u2588\u2588    | 61/100 [00:00&lt;00:00, 918.56 it/sec, obj=0.382]\n    INFO - 15:34:23:     62%|\u2588\u2588\u2588\u2588\u2588\u2588\u258f   | 62/100 [00:00&lt;00:00, 919.23 it/sec, obj=0.375]\n    INFO - 15:34:23:     63%|\u2588\u2588\u2588\u2588\u2588\u2588\u258e   | 63/100 [00:00&lt;00:00, 920.51 it/sec, obj=0.371]\n    INFO - 15:34:23:     64%|\u2588\u2588\u2588\u2588\u2588\u2588\u258d   | 64/100 [00:00&lt;00:00, 921.89 it/sec, obj=0.363]\n    INFO - 15:34:23:     65%|\u2588\u2588\u2588\u2588\u2588\u2588\u258c   | 65/100 [00:00&lt;00:00, 921.25 it/sec, obj=0.364]\n    INFO - 15:34:23:     66%|\u2588\u2588\u2588\u2588\u2588\u2588\u258c   | 66/100 [00:00&lt;00:00, 922.63 it/sec, obj=0.362]\n    INFO - 15:34:23:     67%|\u2588\u2588\u2588\u2588\u2588\u2588\u258b   | 67/100 [00:00&lt;00:00, 924.16 it/sec, obj=0.357]\n    INFO - 15:34:23:     68%|\u2588\u2588\u2588\u2588\u2588\u2588\u258a   | 68/100 [00:00&lt;00:00, 925.41 it/sec, obj=0.355]\n    INFO - 15:34:23:     69%|\u2588\u2588\u2588\u2588\u2588\u2588\u2589   | 69/100 [00:00&lt;00:00, 926.48 it/sec, obj=0.351]\n    INFO - 15:34:23:     70%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588   | 70/100 [00:00&lt;00:00, 927.93 it/sec, obj=0.347]\n    INFO - 15:34:23:     71%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588   | 71/100 [00:00&lt;00:00, 928.44 it/sec, obj=0.34]\n    INFO - 15:34:23:     72%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f  | 72/100 [00:00&lt;00:00, 929.48 it/sec, obj=0.334]\n    INFO - 15:34:23:     73%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e  | 73/100 [00:00&lt;00:00, 929.85 it/sec, obj=0.334]\n    INFO - 15:34:23:     74%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d  | 74/100 [00:00&lt;00:00, 930.35 it/sec, obj=0.334]\n    INFO - 15:34:23:     75%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c  | 75/100 [00:00&lt;00:00, 929.81 it/sec, obj=0.337]\n    INFO - 15:34:23:     76%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c  | 76/100 [00:00&lt;00:00, 929.58 it/sec, obj=0.332]\n    INFO - 15:34:23:     77%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b  | 77/100 [00:00&lt;00:00, 930.70 it/sec, obj=0.331]\n    INFO - 15:34:23:     78%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a  | 78/100 [00:00&lt;00:00, 931.78 it/sec, obj=0.329]\n    INFO - 15:34:23:     79%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589  | 79/100 [00:00&lt;00:00, 932.78 it/sec, obj=0.331]\n    INFO - 15:34:23:     80%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588  | 80/100 [00:00&lt;00:00, 933.52 it/sec, obj=0.328]\n    INFO - 15:34:23:     81%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588  | 81/100 [00:00&lt;00:00, 934.80 it/sec, obj=0.329]\n    INFO - 15:34:23:     82%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f | 82/100 [00:00&lt;00:00, 935.94 it/sec, obj=0.329]\n    INFO - 15:34:23:     83%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e | 83/100 [00:00&lt;00:00, 936.13 it/sec, obj=0.328]\n    INFO - 15:34:23:     84%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d | 84/100 [00:00&lt;00:00, 936.92 it/sec, obj=0.328]\n    INFO - 15:34:23:     85%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c | 85/100 [00:00&lt;00:00, 938.10 it/sec, obj=0.329]\n    INFO - 15:34:23:     86%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c | 86/100 [00:00&lt;00:00, 938.19 it/sec, obj=0.328]\n    INFO - 15:34:23:     87%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b | 87/100 [00:00&lt;00:00, 938.88 it/sec, obj=0.328]\n    INFO - 15:34:23:     88%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a | 88/100 [00:00&lt;00:00, 939.78 it/sec, obj=0.328]\n    INFO - 15:34:23:     89%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589 | 89/100 [00:00&lt;00:00, 940.57 it/sec, obj=0.328]\n    INFO - 15:34:23:     90%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 90/100 [00:00&lt;00:00, 941.30 it/sec, obj=0.328]\n    INFO - 15:34:23:     91%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 91/100 [00:00&lt;00:00, 941.92 it/sec, obj=0.328]\n    INFO - 15:34:23:     92%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f| 92/100 [00:00&lt;00:00, 941.54 it/sec, obj=0.328]\n    INFO - 15:34:23:     93%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e| 93/100 [00:00&lt;00:00, 941.23 it/sec, obj=0.328]\n    INFO - 15:34:23:     94%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d| 94/100 [00:00&lt;00:00, 941.54 it/sec, obj=0.328]\n    INFO - 15:34:23:     95%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c| 95/100 [00:00&lt;00:00, 942.22 it/sec, obj=0.328]\n    INFO - 15:34:23:     96%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c| 96/100 [00:00&lt;00:00, 942.44 it/sec, obj=0.328]\n    INFO - 15:34:23:     97%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b| 97/100 [00:00&lt;00:00, 943.30 it/sec, obj=0.328]\n    INFO - 15:34:23:     98%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a| 98/100 [00:00&lt;00:00, 944.33 it/sec, obj=0.328]\n    INFO - 15:34:23:     99%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589| 99/100 [00:00&lt;00:00, 945.29 it/sec, obj=0.328]\n    INFO - 15:34:23:    100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 100/100 [00:00&lt;00:00, 945.98 it/sec, obj=0.328]\n    INFO - 15:34:23: Optimization result:\n    INFO - 15:34:23:    Optimizer info:\n    INFO - 15:34:23:       Status: None\n    INFO - 15:34:23:       Message: Maximum number of iterations reached. GEMSEO stopped the driver.\n    INFO - 15:34:23:       Number of calls to the objective function by the optimizer: 102\n    INFO - 15:34:23:    Solution:\n    INFO - 15:34:23:       The solution is feasible.\n    INFO - 15:34:23:       Objective: 0.3283010611441774\n    INFO - 15:34:23:       Standardized constraints:\n    INFO - 15:34:23:          -[c-1.0] = 6.591815177348082e-05\n    INFO - 15:34:23:       Design space:\n    INFO - 15:34:23:          +------+-------------+--------------------+-------------+-------+\n    INFO - 15:34:23:          | Name | Lower bound |       Value        | Upper bound | Type  |\n    INFO - 15:34:23:          +------+-------------+--------------------+-------------+-------+\n    INFO - 15:34:23:          | x    |      -2     | 0.4281647812612155 |      2      | float |\n    INFO - 15:34:23:          | y    |      -2     | 0.1797118490118108 |      2      | float |\n    INFO - 15:34:23:          +------+-------------+--------------------+-------------+-------+\n    INFO - 15:34:23: *** End MDOScenario execution (time: 0:00:00.110298) ***\n</code></pre> <p>Lastly, we can plot the optimization history:</p> <pre><code>scenario.post_process(post_name=\"OptHistoryView\", save=False, show=True)\n</code></pre> <p>Out:</p> <pre><code>&lt;gemseo.post.opt_history_view.OptHistoryView object at 0x73b2973ca9b0&gt;\n</code></pre> <p>More than one discipline</p> <p>If you have more than one discipline, the MDF formulation could be helpful. You can have a look to this exemple.</p> <p>Total running time of the script: ( 0 minutes  1.672 seconds)</p> <p> Download Python source code: plot_optimization.py</p> <p> Download Jupyter notebook: plot_optimization.ipynb</p> <p>Gallery generated by mkdocs-gallery</p>"},{"location":"generated/scripts/examples/plot_sensitivity_analysis/","title":"Perform a sensitivity analysis","text":"<p>Note</p> <p>Click here to download the full example code</p>"},{"location":"generated/scripts/examples/plot_sensitivity_analysis/#perform-a-sensitivity-analysis","title":"Perform a sensitivity analysis","text":"<p>In this example, we will use the Sobol' analysis to quantify the sensitivity of the output of the Ishigami function to its inputs:</p> \\[f(x_1,x_2,x_3)=\\sin(x_1)+7\\sin(x_2)^2+0.1*x_3^4\\sin(x_1)\\] <p>where \\(x_1,x_2,x_3\\in[-\\pi,\\pi]\\).</p> <pre><code>import pprint\n\nfrom gemseo.algos.parameter_space import ParameterSpace\nfrom gemseo.disciplines.analytic import AnalyticDiscipline\nfrom gemseo.uncertainty.sensitivity.sobol_analysis import SobolAnalysis\nfrom numpy import pi\n</code></pre> <p>Firstly, we create the Ishigami function:</p> <pre><code>discipline = AnalyticDiscipline(\n    {\"y\": \"sin(x2)+7*sin(x1)**2+0.1*x3**4*sin(x2)\"},\n    name=\"Ishigami\",\n)\n</code></pre> <p>Then, we define the uncertain space with uniform distributions:</p> <pre><code>uncertain_space = ParameterSpace()\nfor name in [\"x1\", \"x2\", \"x3\"]:\n    uncertain_space.add_random_variable(\n        name, \"OTUniformDistribution\", minimum=-pi, maximum=pi\n    )\n</code></pre> <p>From that, we launch a Sobol' analysis with a maximum of 10000 samples:</p> <p>Warning</p> <p>The estimation of Sobol' indices relies on the pick-and-freeze (PF) DOE algorithm and most of the UQ libraries generates \\((1+p)N\\) evaluations where \\(p\\) is the dimension of the input space and \\(N\\) is presented as the number of samples. In fact, \\(N\\) is not the number of samples of the simulators but the number of samples in the sense of the PF-based estimators, which is misleading. This is reason why GEMSEO considers a maximum number of samples \\(n\\), i.e a maximum number of simulations, and then \\(N\\) is deduced from this number: \\(N=\\lceil n/(1+p)\\rceil\\).</p> <pre><code>sobol = SobolAnalysis()\nsobol.compute_samples([discipline], uncertain_space, 10000)\nsobol.compute_indices()\n</code></pre> <p>Out:</p> <pre><code>SobolAnalysis.SensitivityIndices(first={'y': [{'x1': array([0.43704383]), 'x2': array([0.25794631]), 'x3': array([0.01847323])}]}, second={'y': [{'x1': {'x1': array([[0.]]), 'x2': array([[-0.03347684]]), 'x3': array([[-0.02292812]])}, 'x2': {'x1': array([[-0.03347684]]), 'x2': array([[0.]]), 'x3': array([[0.25936497]])}, 'x3': {'x1': array([[-0.02292812]]), 'x2': array([[0.25936497]]), 'x3': array([[0.]])}}]}, total={'y': [{'x1': array([0.41479788]), 'x2': array([0.59310361]), 'x3': array([0.26454354])}]})\n</code></pre> <p>and print the results:</p> <pre><code>pprint.pprint(sobol.indices.first)\npprint.pprint(sobol.indices.total)\n</code></pre> <p>Out:</p> <pre><code>{'y': [{'x1': array([0.43704383]),\n        'x2': array([0.25794631]),\n        'x3': array([0.01847323])}]}\n{'y': [{'x1': array([0.41479788]),\n        'x2': array([0.59310361]),\n        'x3': array([0.26454354])}]}\n</code></pre> <p>We can also visualize both first-order and total Sobol' indices that are automatically sorted by magnitude:</p> <pre><code>sobol.plot(\"y\", save=False, show=True)\n</code></pre> <p></p> <p>Out:</p> <pre><code>&lt;Figure size 640x480 with 1 Axes&gt;\n</code></pre> <p>Total running time of the script: ( 0 minutes  4.666 seconds)</p> <p> Download Python source code: plot_sensitivity_analysis.py</p> <p> Download Jupyter notebook: plot_sensitivity_analysis.ipynb</p> <p>Gallery generated by mkdocs-gallery</p>"},{"location":"generated/scripts/examples/plot_surrogate/","title":"Create a surrogate model","text":"<p>Note</p> <p>Click here to download the full example code</p>"},{"location":"generated/scripts/examples/plot_surrogate/#create-a-surrogate-model","title":"Create a surrogate model","text":"<p>In this example, we will build a surrogate model of the Rosenbrock function and a constraint related to an Rosenbrock-based optimization problem.</p> <pre><code>from numpy import array\n\nfrom gemseo import from_pickle\nfrom gemseo import sample_disciplines\nfrom gemseo import to_pickle\nfrom gemseo.algos.design_space import DesignSpace\nfrom gemseo.disciplines.analytic import AnalyticDiscipline\nfrom gemseo.disciplines.surrogate import SurrogateDiscipline\n</code></pre> <p>Firstly, we define the discipline computing the Rosenbrock function and the Euclidean distance to the optimum:</p> <pre><code>discipline = AnalyticDiscipline(\n    {\"z\": \"(1-x)**2+100*(y-x**2)**2\", \"c\": \"((x-1)**2+(y-1)**2)**0.5\"},\n    name=\"Rosenbrock\",\n)\n</code></pre> <p>Then, we create the design space:</p> <pre><code>design_space = DesignSpace()\ndesign_space.add_variable(\"x\", lower_bound=-2.0, upper_bound=2.0, value=0.0)\ndesign_space.add_variable(\"y\", lower_bound=-2.0, upper_bound=2.0, value=0.0)\n</code></pre> <p>Then, we sample the discipline with an optimal LHS:</p> <pre><code>training_dataset = sample_disciplines([discipline], design_space, [\"z\", \"c\"], algo_name=\"OT_OPT_LHS\", n_samples=30)\n</code></pre> <p>and create a test dataset for validation, using a full-factorial design of experiments:</p> <pre><code>test_dataset = sample_disciplines([discipline], design_space, [\"z\", \"c\"], algo_name=\"OT_FULLFACT\", n_samples=30**2)\n</code></pre> <p>before creating a surrogate discipline:</p> <pre><code>surrogate_discipline = SurrogateDiscipline(\"RBFRegressor\", training_dataset)\n</code></pre> <p>and using it for prediction:</p> <pre><code>surrogate_discipline.execute({\"x\": array([1.0])})\n</code></pre> <p>Out:</p> <pre><code>{'x': array([1.]), 'y': array([0.01176985]), 'c': array([0.95861794]), 'z': array([97.71890412])}\n</code></pre> <p>This surrogate discipline can be used in a scenario. The underlying regression model can also be assessed, with the R2 measure for instance:</p> <pre><code>r2 = surrogate_discipline.get_error_measure(\"R2Measure\")\n</code></pre> <p>either with respect to the training dataset</p> <pre><code>r2.compute_learning_measure(as_dict=True)\n</code></pre> <p>Out:</p> <pre><code>{'c': array([1.]), 'z': array([1.])}\n</code></pre> <p>by cross-validation</p> <pre><code>r2.compute_cross_validation_measure(as_dict=True)\n</code></pre> <p>Out:</p> <pre><code>{'c': array([0.99621966]), 'z': array([0.78601484])}\n</code></pre> <p>or with respect to the test dataset</p> <pre><code>r2.compute_test_measure(test_dataset, as_dict=True)\n</code></pre> <p>Out:</p> <pre><code>{'c': array([0.9963709]), 'z': array([0.95345544])}\n</code></pre> <p>or with the root mean squared error:</p> <pre><code>rmse = surrogate_discipline.get_error_measure(\"RMSEMeasure\")\n</code></pre> <p>either with respect to the training dataset</p> <pre><code>rmse.compute_learning_measure(as_dict=True)\n</code></pre> <p>Out:</p> <pre><code>{'c': array([0.04096718]), 'z': array([89.17523086])}\n</code></pre> <p>by cross-validation</p> <pre><code>rmse.compute_cross_validation_measure(as_dict=True)\n</code></pre> <p>Out:</p> <pre><code>{'c': array([0.05642519]), 'z': array([273.159698])}\n</code></pre> <p>or with respect to the test dataset</p> <pre><code>rmse.compute_test_measure(test_dataset, as_dict=True)\n</code></pre> <p>Out:</p> <pre><code>{'c': array([0.05616469]), 'z': array([146.3793417])}\n</code></pre> <p>Lastly, you can save your surrogate discipline</p> <pre><code>to_pickle(surrogate_discipline, \"my_surrogate.pkl\")\n</code></pre> <p>to use it later in another script:</p> <pre><code>surrogate_discipline = from_pickle(\"my_surrogate.pkl\")\nsurrogate_discipline.execute({\"x\": array([1.0])})\n</code></pre> <p>Out:</p> <pre><code>{'x': array([1.]), 'y': array([0.01176985]), 'c': array([0.95861794]), 'z': array([97.71890412])}\n</code></pre> <p>Total running time of the script: ( 0 minutes  0.801 seconds)</p> <p> Download Python source code: plot_surrogate.py</p> <p> Download Jupyter notebook: plot_surrogate.ipynb</p> <p>Gallery generated by mkdocs-gallery</p>"},{"location":"generated/scripts/examples/plot_uncertain_space/","title":"Create an uncertain space","text":"<p>Note</p> <p>Click here to download the full example code</p>"},{"location":"generated/scripts/examples/plot_uncertain_space/#create-an-uncertain-space","title":"Create an uncertain space","text":"<p>GEMSEO does not offer an uncertain space but a <code>ParameterSpace</code>, grouping both deterministic and uncertain variables. This is a subclass of <code>DesignSpace</code> with a method <code>add_random_variable</code>.</p> <p>If you want to create an uncertain space, create a <code>ParameterSpace</code> and only use its <code>add_random_variable</code> method.</p>"},{"location":"generated/scripts/examples/plot_uncertain_space/#create-an-uncertain-space_1","title":"Create an uncertain space","text":"<p>Firstly, we create an empty <code>ParameterSpace</code> from the high-level function <code>create_parameter_space</code>:</p> <pre><code>from gemseo.algos.parameter_space import ParameterSpace\n\nuncertain_space = ParameterSpace()\n</code></pre> <p>and add a first uncertain variable \\(u\\), following the standard Gaussian distribution</p> <pre><code>uncertain_space.add_random_variable(\"u\", \"OTNormalDistribution\")\n</code></pre> <p>Note</p> <p>OT stands for OpenTURNS, the UQ library used for sampling.</p> <p>We can also add a second uncertain variable \\(v\\) following the Gaussian distribution with mean 2 and standard deviation 0.5:</p> <pre><code>uncertain_space.add_random_variable(\"v\", \"OTNormalDistribution\", mu=2, sigma=0.5)\n</code></pre> <p>as well as a third uncertain variable \\(w\\) following a triangular distribution:</p> <pre><code>uncertain_space.add_random_variable(\n    \"z\", \"OTTriangularDistribution\", minimum=-1.0, mode=0.5, maximum=1.0\n)\n</code></pre> <p>We can print this <code>ParameterSpace</code>:</p> <pre><code>uncertain_space\n</code></pre> Parameter space: Name Lower bound Value Upper bound Type Distribution u -inf 0 inf float Normal(mu=0.0, sigma=1.0) v -inf 2 inf float Normal(mu=2, sigma=0.5) z -1 0.1666666666666667 1 float Triangular(lower=-1.0, mode=0.5, upper=1.0) <p>.. note::    The initial current value corresponds to the mean of the random variables.</p>"},{"location":"generated/scripts/examples/plot_uncertain_space/#create-a-class-of-uncertain-space","title":"Create a class of uncertain space","text":"<p>If we want to use this uncertain space more than once, it can be more convenient and Pythonic to use the object-oriented paradigm and subclass <code>ParameterSpace</code>:</p> <pre><code>from gemseo.algos.parameter_space import ParameterSpace\n\n\nclass MyUncertainSpace(ParameterSpace):\n    def __init__(self):\n        super().__init__()\n        self.add_random_variable(\"u\", \"OTNormalDistribution\")\n        self.add_random_variable(\"v\", \"OTNormalDistribution\", mu=2, sigma=0.5)\n        self.add_random_variable(\n            \"z\", \"OTTriangularDistribution\", minimum=-1.0, mode=0.5, maximum=1.0\n        )\n</code></pre> <p>Then, we only have to instantiate <code>MyUncertainSpace</code>:</p> <pre><code>uncertain_space = MyUncertainSpace()\nuncertain_space\n</code></pre> My uncertain space: Name Lower bound Value Upper bound Type Distribution u -inf 0 inf float Normal(mu=0.0, sigma=1.0) v -inf 2 inf float Normal(mu=2, sigma=0.5) z -1 0.1666666666666667 1 float Triangular(lower=-1.0, mode=0.5, upper=1.0) <p>Total running time of the script: ( 0 minutes  0.011 seconds)</p> <p> Download Python source code: plot_uncertain_space.py</p> <p> Download Jupyter notebook: plot_uncertain_space.ipynb</p> <p>Gallery generated by mkdocs-gallery</p>"},{"location":"generated/scripts/examples/plot_uncertainty_propagation/","title":"Propagate uncertainties","text":"<p>Note</p> <p>Click here to download the full example code</p>"},{"location":"generated/scripts/examples/plot_uncertainty_propagation/#propagate-uncertainties","title":"Propagate uncertainties","text":"<p>In this example, we will propagate uncertainties through a discipline \\(f:u,v\\mapsto u+v\\)</p> <pre><code>from matplotlib import pyplot as plt\n\nfrom gemseo import sample_disciplines\nfrom gemseo.algos.parameter_space import ParameterSpace\nfrom gemseo.disciplines.analytic import AnalyticDiscipline\nfrom gemseo.uncertainty.statistics.empirical_statistics import EmpiricalStatistics\n</code></pre> <p>Firstly, we define a uncertain space with two normal random variables \\(u\\) and \\(v\\) with mean -1 and +1 and unit standard deviation.</p> <pre><code>uncertain_space = ParameterSpace()\nuncertain_space.add_random_variable(\"u\", \"OTNormalDistribution\", mu=-1.0)\nuncertain_space.add_random_variable(\"v\", \"OTNormalDistribution\", mu=1.0)\n</code></pre> <p>Then, we define the discipline from analytic formula:</p> <pre><code>discipline = AnalyticDiscipline({\"w\": \"u+v\"})\n</code></pre> <p>Thirdly, we sample the discipline with a Monte Carlo algorithm:</p> <pre><code>dataset = sample_disciplines([discipline], uncertain_space, [\"w\"], algo_name=\"OT_MONTE_CARLO\", n_samples=1000)\n</code></pre> <p>Lastly, we create an <code>EmpiricalStatistics</code> object to estimate statistics, such as mean:</p> <pre><code>statistics = EmpiricalStatistics(dataset)\nmean = statistics.compute_mean()\nmean\n</code></pre> <p>Out:</p> <pre><code>{'u': array([-0.94777684]), 'v': array([0.95896977]), 'w': array([0.01119293])}\n</code></pre> <p>and variance:</p> <pre><code>variance = statistics.compute_variance()\nvariance\n</code></pre> <p>Out:</p> <pre><code>{'u': array([0.94051807]), 'v': array([1.02630904]), 'w': array([1.96988025])}\n</code></pre> <p>Note</p> <p>The mean and standard deviation of the output are almost equal to 0 and 2, which is the expected behavior of the sum of two independent Gaussian random variables.</p> <p>We can also plot the histogram of the three random variables:</p> <pre><code>fig, axes = plt.subplots(1, 3)\nfor ax, name in zip(axes, [\"u\", \"v\", \"w\"]):\n    ax.hist(dataset.get_view(variable_names=name))\n    ax.set_title(name)\n</code></pre> <p></p> <p>Total running time of the script: ( 0 minutes  0.669 seconds)</p> <p> Download Python source code: plot_uncertainty_propagation.py</p> <p> Download Jupyter notebook: plot_uncertainty_propagation.ipynb</p> <p>Gallery generated by mkdocs-gallery</p>"},{"location":"generated/scripts/examples/plot_unit_conversion/","title":"Convert units","text":"<p>Note</p> <p>Click here to download the full example code</p>"},{"location":"generated/scripts/examples/plot_unit_conversion/#convert-units","title":"Convert units","text":"<p>The data presented in the use case description are often expressed with usual units but the simulator requires standard units. This example illustrates how to convert a data from a unit to another.</p> <p>First, we load the <code>convert_from</code> and <code>convert_to</code> functions:</p> <pre><code>from gemseo_oad_training.unit import convert_from\nfrom gemseo_oad_training.unit import convert_to\n</code></pre> <p>Then, we consider a time value expressed in hours:</p> <pre><code>time_in_hours = 1\n</code></pre> <p>Lastly, we convert it into seconds:</p> <pre><code>time_in_seconds = convert_from(\"h\", time_in_hours)\ntime_in_seconds\n</code></pre> <p>Out:</p> <pre><code>3600.0\n</code></pre> <p>and convert this number of seconds into minutes:</p> <pre><code>time_in_minutes = convert_to(\"min\", time_in_seconds)\ntime_in_minutes\n</code></pre> <p>Out:</p> <pre><code>60.0\n</code></pre> <p>Seealso</p> <p>The available units</p> <p>Total running time of the script: ( 0 minutes  0.002 seconds)</p> <p> Download Python source code: plot_unit_conversion.py</p> <p> Download Jupyter notebook: plot_unit_conversion.ipynb</p> <p>Gallery generated by mkdocs-gallery</p>"},{"location":"generated/scripts/project/","title":"Project","text":"<p> Download all examples in Python source code: project_python.zip</p> <p> Download all examples in Jupyter notebooks: project_jupyter.zip</p> <p>Gallery generated by mkdocs-gallery</p>"},{"location":"presentation/dates/","title":"Important dates","text":""},{"location":"presentation/dates/#evaluation","title":"Evaluation","text":"<p>Send the deliverables at <code>matthias.delozzo@irt-saintexupery.com</code> by Friday, June 20th at the latest.</p>"},{"location":"presentation/dates/#courses","title":"Courses","text":"Day Date Time Room Tuesday 27/05/2024 14h - 15h45 C102 Tuesday 27/05/2024 16h15 - 18h C102 Monday 02/06/2024 14h - 15h45 A003 Monday 02/06/2024 16h15 - 18h A003 Thursday 05/06/2024 14h - 15h45 C102 Thursday 05/06/2024 16h15 - 18h C102 Wednesday 11/06/2024 14h - 15h45 C103 Wednesday 11/06/2024 16h15 - 18h C103"},{"location":"presentation/deliverables/","title":"Deliverables","text":""},{"location":"presentation/deliverables/#code","title":"Code","text":"<p>A series of Python scripts containing:</p> <ul> <li>Python code,</li> <li>documentation.</li> </ul> <p>These scripts must be placed in the directory docs/scripts/project.</p> <p>Moreover, they must be properly formatted in order to be correctly compiled when using <code>mkdocs build</code> and <code>mkdocs serve</code> (or <code>mkdocs.exe build</code> and <code>mkdocs.exe serve</code> under Windows):</p> <ul> <li>the header docstring will be converted into an HTML block,</li> <li>the Python comment blocks whose first line is <code># %%</code> will be converted into HTML blocks,</li> <li>the Python code will be executed if and only if the file name starts with <code>\"plot_\"</code> (e.g. <code>\"plot_example_name.py\"</code>);   do not prefix the file name if the execution is long.  </li> <li>the string representation of objects will be displayed in webpage in a nice way   (e.g. table for pandas DataFrame, console output for strings, etc.)   and the matplotlib figures will be plotted in the webpage.</li> </ul> <p>Note</p> <p>You do not need to compile the project every time you change the Python script. You can use this Python script like any other Python script and compile the project only after the script writing is finished. When the project is compiled, only the scripts that have evolved are recompiled.</p> <p>Here is an example of a well-formatted and documented Python code:</p> <pre><code>   r\"\"\"\n   # Sum function\n\n   In this example,\n   we implement a function summing the elements of a vector $x\\in\\mathbb{R}^d$:\n\n   $$f(x)=\\sum_{i=1}^d x_i$$\n   \"\"\"\n   import matplotlib.pyplot as plt\n   from numpy import array\n\n   # %%\n   # Firstly,\n   # we define the function:\n   def f(x):\n       return x.sum()\n\n   # %%\n   # Then,\n   # we evaluate this function from the input vector $x=[1,2]$:\n   y = f(array([1.,2.]))\n\n   # %%\n   # and we display the output value:\n   y\n\n   # Contrarily to the previous ones,\n   # this comment will not be converted into an HTML block\n   # because it does not start with #%%.\n   # It will appear as a Python comment.\n\n   # %%\n   # Lastly,\n   # we can draw a line using matplotlib\n   plt.plot([0, 1], [0, 2])\n</code></pre>"},{"location":"presentation/deliverables/#report","title":"Report","text":""},{"location":"presentation/deliverables/#content","title":"Content","text":"<p>A report containing:</p> <ul> <li>the author names,</li> <li>a title</li> <li>from four to six keywords,</li> <li>an abstract (no more than 1 300 characters),</li> <li>an introduction,</li> <li>a section for each problem, ending with a synthesis.</li> <li>a general conclusion.</li> </ul> <p>The syntheses and the general conclusion summarize the main facts for someone who does not want to read the details.</p> <p>Furthermore, all the results provided must be interpreted.</p>"},{"location":"presentation/deliverables/#format","title":"Format","text":"<p>Either a markdown-based HTML document or a PDF document.</p> <p>In the case of a markdown-based HTML report, the markdown files must be placed in the directory lh2pac/docs/report and referenced in the nav/Report section of the mkdocs.yml file.</p>"},{"location":"presentation/use_cases/","title":"4 OAD use cases","text":"<p>In this project, we seek to optimize an aircraft of approximately 150 passengers that flies at Mach 0.78, using different engine and fuel technologies.</p>"},{"location":"presentation/use_cases/#the-oad-problem","title":"The OAD problem","text":"<p>The OAD problem is to find the values of the design parameters  that minimize the maximum take-off mass (MTOM, <code>mtom</code> in the code) under some operation constraints. Note that the MTOM of an airplane is a good criterion to optimize the design. Alternative objectives are the cash operating cost (COC, <code>coc</code> in the code) or the direct operating cost (DOC, <code>doc</code> in the code).</p>"},{"location":"presentation/use_cases/#the-design-parameters","title":"The design parameters","text":"<p>The design parameters are :</p> <ul> <li>the maximum sea level static thrust  (100 kN \u2264 slst \u2264 200 kN, default: 150 kN),</li> <li>the number of passengers  (120 \u2264 n_pax \u2264 180, default: 150),</li> <li>the wing area (100 m\u00b2 \u2264 area \u2264 200 m\u00b2, default: 180 m\u00b2),</li> <li>the wing aspect ratio  (5 \u2264 ar \u2264 20, default: 9.).</li> </ul>"},{"location":"presentation/use_cases/#the-operational-constraints","title":"The operational constraints","text":"<p>The operational constraints are :</p> <ul> <li>the take-off field length (tofl \u2264 1900 m),</li> <li>the approach speed (vapp \u2264 135 kt),</li> <li>the vertical speed (300 ft/min \u2264 vz),</li> <li>the wing span (span \u2264 40 m),</li> <li>the wing length (length \u2264 45 m),</li> <li>the fuel margin (0% \u2264 fm).</li> </ul>"},{"location":"presentation/use_cases/#the-uncertain-parameters","title":"The uncertain parameters","text":"<p>In Problems 2 and 3, some parameters are considered as uncertain.</p> <p>These uncertain parameters are modelled as random variables defined by probability distributions:</p> Variable Distribution Fuel type Engine type <code>gi</code> T(0.35, 0.4, 0.405) liquid_h2 All <code>vi</code> T(0.755, 0.800, 0805) liquid_h2 All <code>aef</code> T(0.99, 1., 1.03) All All <code>cef</code> T(0.99, 1., 1.03) All All <code>aef</code> T(0.99, 1., 1.03) All All <code>fc_pwd</code> T(0.8, 1, 1.02) liquid_h2 electrofan <code>bed</code> U(400,700) battery All <p>where <code>T(minimum, mode, maximum)</code> and <code>U(minimum,maximum)</code> represent the triangular distribution and the uniform distribution respectively. the last two columns indicate the type of fuel and the type of engine for which these uncertain parameters are relevant.</p> <p>The parameters <code>aef</code>, <code>cef</code> and <code>aef</code> are related to the three main technical areas involved in aircraft design, namely aerodynamics, propulsion and structure. The lower, the better. These factors are representing the unknown included in any creative activity. Their probability distributions are not symmetrical as it is always easier to make something less efficient than expected...</p>"},{"location":"presentation/use_cases/#the-12-models","title":"The 12 models","text":"<p>The 12 models are defined in <code>gemseo-oad</code> as Python functions:</p> <pre><code>from gemseo_oad_training.models import aerodynamic\nfrom gemseo_oad_training.models import approach\nfrom gemseo_oad_training.models import battery\nfrom gemseo_oad_training.models import climb\nfrom gemseo_oad_training.models import engine\nfrom gemseo_oad_training.models import fuel_tank\nfrom gemseo_oad_training.models import geometry\nfrom gemseo_oad_training.models import mass\nfrom gemseo_oad_training.models import mission\nfrom gemseo_oad_training.models import operating_cost\nfrom gemseo_oad_training.models import take_off\nfrom gemseo_oad_training.models import total_mass\n</code></pre> <p>Some models do not make sense for certain aircraft configurations, e.g. battery for an aircraft equipped with a turbofan engine, but you can still include them in your multidisciplinary process, and they will remain silent.</p> <p>About the models</p> <p>You will find more information about these models on  this page.</p>"},{"location":"presentation/use_cases/#the-units","title":"The units","text":"<p>The use cases are written using common units.</p> <p>The models only know STANDARD UNITS which means that all data provided to the function MUST be expressed in standard units and that all data retrieved by the function are expressed in standard units.</p> <p>Convert units</p> <p>The functions <code>convert_from</code> and <code>convert_to</code> from <code>gemseo_oad_training.unit</code> can make the conversion easier.</p>"},{"location":"presentation/use_cases/#the-four-use-cases","title":"The four use cases","text":"Id Fuel type Engine type Design range (km) UC1 Kerosene Turbofan 5500 UC2 Hydrogen Turbofan 5500 UC3 Hydrogen Electrofan 5500 UC4 Battery Electrofan 500"},{"location":"presentation/use_cases/#credits","title":"Credits","text":"<p>This OAD problem uses the models presented in gemseo-oad-training  that have been developed by the CADO (Conceptual Airplane Design &amp; Operations) team, made up of Nicolas PETEILH, Pascal ROCHES, Nicolas MONROLIN, Thierry DRUOT, from the Aircraft &amp; Systems, Air Transport Department at ENAC. This team also strongly inspired the use cases (UCs) proposed in this project.</p>"},{"location":"reference/SUMMARY/","title":"SUMMARY","text":"<ul> <li>lh2pac<ul> <li>utils</li> </ul> </li> </ul>"},{"location":"reference/lh2pac/","title":"API documentation","text":""},{"location":"reference/lh2pac/#lh2pac","title":"lh2pac","text":""},{"location":"reference/lh2pac/utils/","title":"Utils","text":""},{"location":"reference/lh2pac/utils/#lh2pac.utils","title":"utils","text":""},{"location":"reference/lh2pac/utils/#lh2pac.utils-functions","title":"Functions","text":""},{"location":"reference/lh2pac/utils/#lh2pac.utils.update_default_inputs","title":"update_default_inputs","text":"<pre><code>update_default_inputs(\n    disciplines: Iterable[Discipline],\n    input_names_to_default_values: StrKeyMapping,\n) -&gt; None\n</code></pre> <p>Update some default input values of a collection of disciplines.</p> <p>Parameters:</p> <ul> <li> <code>disciplines</code>               (<code>Iterable[Discipline]</code>)           \u2013            <p>The disciplines.</p> </li> <li> <code>input_names_to_default_values</code>               (<code>StrKeyMapping</code>)           \u2013            <p>The map between the input names and default input values.</p> </li> </ul> Source code in <code>src/lh2pac/utils.py</code> <pre><code>def update_default_inputs(disciplines: Iterable[Discipline], input_names_to_default_values: StrKeyMapping) -&gt; None:\n    \"\"\"Update some default input values of a collection of disciplines.\n\n    Args:\n        disciplines: The disciplines.\n        input_names_to_default_values: The map\n            between the input names and default input values.\n    \"\"\"\n    for discipline in disciplines:\n        input_grammar = discipline.io.input_grammar\n        defaults = input_grammar.defaults\n        for input_name, input_value in input_names_to_default_values.items():\n            if input_name in input_grammar:\n                defaults[input_name] = input_value\n</code></pre>"},{"location":"report/","title":"Title","text":"<p>Author 1, Author 2, ...</p> <p>Keywords: keyword 1, keyword 2, ...</p> <p>Abstract</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.  Aenean rhoncus ante vel tellus viverra, efficitur gravida dui interdum.  Aliquam ac egestas ex. Sed ut sem nec turpis dapibus rutrum eu sed dolor.  In arcu felis, sagittis id auctor viverra, accumsan non nunc.  Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.  Sed sed justo euismod lectus semper ultricies.  Vivamus congue pharetra enim, eu gravida justo ultricies ut.  Praesent faucibus justo ac nisl sollicitudin euismod sit amet at augue.  Quisque velit quam, iaculis a diam accumsan, commodo lacinia magna.  Fusce eu viverra quam.  Mauris iaculis pulvinar elit, id tincidunt nulla auctor vitae.  In ligula dui, feugiat eu velit in, faucibus eleifend mauris.</p> <p>Sed at volutpat massa.  Suspendisse in tincidunt magna.  Integer tempus pellentesque pretium.  Mauris commodo pellentesque erat, eget tempus nunc mollis nec.  Etiam nec velit non velit dignissim venenatis at sed purus.  Etiam libero nisi, viverra nec ligula at, finibus dignissim metus.  Suspendisse nec justo id eros tempus commodo sit amet in nunc. Ut venenatis, tortor eu porta dignissim, diam risus iaculis purus, ut ultrices massa lacus ut nulla.  Ut cursus dolor vitae porta ultricies.  Etiam mattis lacus nulla, nec posuere velit finibus ac.  Nam egestas.</p>"},{"location":"report/conclusion/","title":"Conclusion","text":""},{"location":"report/introduction/","title":"Introduction","text":""},{"location":"report/part1/","title":"Surrogate modeling and optimization","text":""},{"location":"report/part2/","title":"Surrogate modeling and uncertainty quantification","text":""},{"location":"report/part3/","title":"Surrogate modeling and robust optimization","text":""},{"location":"utils/installation/","title":"Installation","text":""},{"location":"utils/installation/#git","title":"Git","text":""},{"location":"utils/installation/#clone-only-once","title":"Clone (only once)","text":"<p>In your favorite working directory, e.g. <code>\"my_wd\"</code>,</p> <pre><code>git clone git@gitlab.com:MatthiasDeLozzo/lh2pac.git\n</code></pre> <p>This will create a directory <code>\"lh2pac\"</code> in <code>\"my_wd\"</code>.</p>"},{"location":"utils/installation/#create-a-working-branch-only-once","title":"Create a working branch (only once)","text":"<p>In the directory <code>\"lh2pac\"</code>:</p> <pre><code>git checkout origin/modia2024 -b my_modia2024  \n</code></pre>"},{"location":"utils/installation/#rebase-your-working-branch","title":"Rebase your working branch","text":"<p>From time to time,  I can update the git project with miscellaneous information;  you will then have to rebase your branch.</p> <p>Make sure you are on <code>my_modia2024</code>;  otherwise: <code>git checkout my_modia2024</code>.</p> <p>In the directory <code>\"my_wd/lh2pac\"</code>:</p> <pre><code>git fetch origin\ngit rebase origin/modia2024\n</code></pre>"},{"location":"utils/installation/#create-a-virtual-environment-only-once","title":"Create a virtual environment (only once)","text":"<p>In the directory <code>\"lh2pac\"</code>:</p>  Linux Windows <pre><code>python -m venv .venv\nsource .venv/bin/activate\npip install --editable .\nsource .venv/bin/deactivate\n</code></pre> <pre><code>python -m venv .venv\n.venv\\Scripts\\activate.bat\npip install --editable .\n.venv\\Scripts\\deactivate.bat\n</code></pre>"},{"location":"utils/installation/#configure-your-ide-only-once","title":"Configure your IDE (only once)","text":"<p>Select the Python interpreter: </p>  Linux Windows <p><code>\"my_wd/lh2pac/.venv/bin/python\"</code></p> <p><code>\"lh2pac\\.venv\\Scripts\\python.exe\"</code></p>"},{"location":"utils/installation/#use-your-virtual-environment-in-a-python-console","title":"Use your virtual environment in a Python console","text":"<p>In the directory <code>\"lh2pac\"</code>:</p>  Linux Windows <pre><code>source .venv/bin/activate\n</code></pre> <pre><code>.venv\\Scripts\\activate.bat\n</code></pre> <p>and use Python as usual.</p>"},{"location":"utils/installation/#compile-the-documentation","title":"Compile the documentation","text":""},{"location":"utils/installation/#compile-each-time-you-save-a-file-temporary-doc","title":"Compile each time you save a file (temporary doc)","text":"Linux Windows <pre><code>mkdocs serve\n</code></pre> <pre><code>mkdocs.exe serve\n</code></pre> <p>The documentation is generated and can be accessed at a local domain, e.g. http://127.0.0.1:8000.</p> <p>Then, every time you save a file, the documentation will be updated automatically.</p>"},{"location":"utils/installation/#compile-permanent-doc","title":"Compile (permanent doc)","text":"<p>The previous command does not save the website; to do so, use the following command.</p>  Linux Windows <pre><code>mkdocs build\n</code></pre> <pre><code>mkdocs.exe build\n</code></pre>"},{"location":"utils/markdown/","title":"Introduction to the markdown syntax","text":"<p>markdown is an easy-to-read, what-you-see-is-what-you-get plaintext markup syntax and parser system. This is the plaintext markup language used by mkdocs, the generator of the current HTML project. Here is a short but normally sufficient introduction to markdown. For a deeper insight,  please refer to this markdown presentation. and to this Material-for-MkDocs page.</p>"},{"location":"utils/markdown/#sections","title":"Sections","text":"<p>Split a page into sections:</p> <pre><code>    # Main title\n\n    ## Sub-title\n\n    ### Sub-sub-title\n</code></pre>"},{"location":"utils/markdown/#paragraphs","title":"Paragraphs","text":"<p>Separate paragraph with blank lines.</p> <pre><code>    This is a paragraph.\n    This is the same paragraph.\n\n    This is a new paragraph separated from the previous one with a blank line.\n</code></pre> <p>This is a paragraph. This is the same paragraph.</p> <p>This is a new paragraph separated from the previous one with a blank line.</p>"},{"location":"utils/markdown/#text-formatting","title":"Text formatting","text":"<p>Surround a text with one asterisk and without whitespace between the text and the asterisk.</p> <pre><code>    Put a expression in *italics*.\n\n    Put a expression in **bold**.\n\n    Cannot but an expression both in ***italics and bold***.\n</code></pre> <p>Put an expression in italics.</p> <p>Put an expression in bold.</p> <p>Cannot but an expression both in italics and bold.</p>"},{"location":"utils/markdown/#hyperlink","title":"Hyperlink","text":"<p>Use <code>[expression](url)</code>.</p> <p>This is a hyperlink to an external content: DuckDuckGo.</p>"},{"location":"utils/markdown/#lists","title":"Lists","text":""},{"location":"utils/markdown/#unnumbered-list","title":"Unnumbered list","text":"<pre><code>    - An item.\n    - Another item.\n\n        * A sub-item (pay attention to the indentation: 4 spaces).\n        * Another sub-item.\n\n    - Another item\n      written on two lines.\n\n        1. A first sub-item (pay attention to the indentation: 4 spaces).\n        2. A second sub-item.\n</code></pre> <ul> <li>An item.</li> <li> <p>Another item.</p> <ul> <li>A sub-item (pay attention to the indentation: 4 spaces).</li> <li>Another sub-item.</li> </ul> </li> <li> <p>Another item   written on two lines.</p> <ol> <li>A first sub-item (pay attention to the indentation: 4 spaces).</li> <li>A second sub-item.</li> </ol> </li> </ul>"},{"location":"utils/markdown/#numbered-list","title":"Numbered list","text":"<pre><code>    1. An item.\n    1. A second item.\n\n        - A sub-item (pay attention to the indentation: 4 spaces).\n        - Another sub-item.\n\n    1. A third item\n       written on two lines.\n\n        1. A first sub-item (pay attention to the indentation: 4 spaces).\n        1. A second sub-item.\n</code></pre> <ol> <li>An item.</li> <li> <p>A second item.</p> <ul> <li>A sub-item (pay attention to the indentation: 4 spaces).</li> <li>Another sub-item.</li> </ul> </li> <li> <p>A third item    written on two lines.</p> <ol> <li>A first sub-item (pay attention to the indentation: 4 spaces).</li> <li>A second sub-item.</li> </ol> </li> </ol>"},{"location":"utils/markdown/#code-insertion","title":"Code insertion","text":"<pre><code>    Insert inline code: `y = f(x)`\n</code></pre> <p>Insert inline code: <code>y = f(x)</code></p> <p>Insert a block code using triple backquotes:</p> <pre><code>    ```python\n\n       def f(x):\n          return 2*x\n    ```\n</code></pre> <pre><code>   def f(x):\n      return 2*x\n</code></pre>"},{"location":"utils/markdown/#image-insertion","title":"Image insertion","text":"<p>Warning</p> <p>Use of relative file paths.</p> <pre><code>![gemseo](../images/gemseo.png)\n</code></pre> <p></p>"},{"location":"utils/markdown/#latex-based-mathematics","title":"LaTeX-based mathematics","text":"<p>Warning</p> <p>Do not hesitate to refresh your browser if the equations are not displayed. </p> <pre><code>    Einstein wrote $E=mc^2$.\n</code></pre> <p>Einstein wrote \\(E=mc^2\\).</p> <pre><code>    $$\n    \\begin{align}\n       (a + b)^2  &amp;=  (a + b)(a + b) \\\\\n                  &amp;=  a^2 + 2ab + b^2\n    \\end{align}       \n    $$\n</code></pre> \\[ \\begin{align}    (a + b)^2  &amp;=  (a + b)(a + b) \\\\               &amp;=  a^2 + 2ab + b^2 \\end{align} \\] <p><pre><code>    $$(a - b)^2 = a^2 - 2ab + b^2$$\n</code></pre> $$ (a - b)^2 = a^2 - 2ab + b^2 $$</p>"},{"location":"utils/markdown/#admonitions","title":"Admonitions","text":"<p>Here are a few qualifiers.  Other are available here.</p> <pre><code>    !!! note\n\n       This is a *note* block.\n\n    !!! note \"Custom title\"\n\n       This is a *note* block with a custom title.       \n\n    !!! seealso\n\n       This is a *seealso* block.\n\n    !!! warning\n\n       This is a *warning* block.\n</code></pre> <p>Note</p> <p>This is a note block.</p> <p>Custom title</p> <p>This is a note block with a custom title.       </p> <p>Seealso</p> <p>This is a seealso block.</p> <p>Warning</p> <p>This is a warning block.</p>"},{"location":"utils/markdown/#citation","title":"Citation","text":"<p>GEMSEO<sup>1</sup> is an open source software to solve multidisciplinary problem.</p> <ol> <li> <p>Gallard, F., Vanaret, C., Gu\u00e9not, D, et al., GEMS: A Python Library for Automation of Multidisciplinary Design Optimization Process Generation. In : 2018 AIAA/ASCE/AHS/ASC Structures, Structural Dynamics, and Materials Conference. 2018. p. 0657.\u00a0\u21a9</p> </li> </ol>"}]}