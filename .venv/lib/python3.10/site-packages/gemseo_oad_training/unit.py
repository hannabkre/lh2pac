# Copyright 2024 ENAC
# Copyright 2021 IRT Saint Exupéry, https://www.irt-saintexupery.com
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License version 3 as published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this program; if not, write to the Free Software Foundation,
# Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#
# :author: Conceptual Airplane Design & Operations (CADO team, ENAC)
#          Thierry DRUOT
# Code improvements:
#          François Gallard
#          Matthias De Lozzo
#          IRT Saint Exupéry
"""Generic unit converter."""

from collections.abc import Mapping
from operator import mul
from operator import truediv
from typing import Any
from typing import Callable

from numpy import array
from numpy import ndarray


def _convert(unit: str, value: Any, operator: Callable[[float, float], float]) -> Any:
    """Convert a value, using the SI units.

    Args:
        unit: The unit of the value before or after conversion, according to `operator`.
        value: The value to be converted.
        operator: The conversion operator.

    Returns:
        The converted value.
    """
    if value is None or isinstance(value, str):
        return value

    if isinstance(value, list):
        return [_convert(unit, v, operator) for v in value]

    if isinstance(value, tuple):
        return tuple(_convert(unit, v, operator) for v in value)

    if isinstance(value, ndarray):
        return array([_convert(unit, v, operator) for v in value])

    if isinstance(value, Mapping):
        return {k: _convert(unit, v, operator) for k, v in value.items()}

    if unit in ["integer", "int", "entier", "numeric"]:
        value = int(value)

    return operator(value, UNIT[unit])


def convert_from(unit: str, value: Any) -> Any:
    """Express a value in SI units.

    Args:
        unit: The current unit for the value, *e.g.* cm.
        value: The value.

    Returns:
        The value expressed in SI units, *e.g.* m.
    """
    return _convert(unit, value, mul)


def convert_to(unit: str, value: Any) -> Any:
    """Express an SI-based value in a specific unit.

    Args:
        unit: The specific unit, *e.g.* cm.
        value: The value expressed in SI units, *e.g.* m.

    Returns:
        The value expressed in the specified unit.
    """
    return _convert(unit, value, truediv)


UNIT = {
    # dim = "Distance"
    "m": 1.0,
    "cm": 0.01,
    "mm": 0.001,
    "inch": 0.0254,
    "in": 0.0254,
    "km": 1000.0,
    "ft": 0.3048,
    "NM": 1852.0,
    # dim = "YearlyDistance"
    "km/year": 1.0,
    "1e12.km/year": 1.0e-12,
    # dim = "Area"
    "m2": 1.0,
    "cm2": 0.0001,
    "ft2": 0.0929030,
    "inch2": 0.00064516,
    "in2": 0.00064516,
    # dim = "AreaPerMass"
    "m2/kg": 1.0,
    "cm2/kg": 0.0001,
    "ft2/kg": 0.0929030,
    "inch2/kg": 0.00064516,
    "in2/kg": 0.00064516,
    # dim = "PowerPerMass"
    "N/kg": 1.0,
    "daN/kg": 10.0,
    "kN/kg": 1000.0,
    # dim = "Duration"
    "s": 1.0,
    "min": 60.0,
    "h": 3600.0,
    "an": 31557600.0,
    "year": 31557600.0,
    # dim = "Velocity"
    "m/s": 1.0,
    "ft/s": 0.3048,
    "ft/min": 0.00508,
    "km/h": 0.2777777778,
    "kt": 0.5144444444,
    "mph": 0.4469444,
    # dim = "Acceleration"
    "m/s2": 1.0,
    "km/s2": 1000.0,
    "ft/s2": 0.3048,
    "kt/s": 0.5144444444,
    # dim = "AbsoluteTemperature"
    "KELVIN": 1.0,
    "Kelvin": 1.0,
    "K": 1.0,
    "RANKINE": 0.5555556,
    "Rankine": 0.5555556,
    "R": 0.5555556,
    # dim = "AbsoluteTemperatureinCelsius"
    "CELSIUS": 1.0,
    "Celsius": 1.0,
    "C": 1.0,
    # dim = "DeltaofTemperature"
    "degK": 1.0,
    "degC": 1.0,
    "degF": 0.5555556,
    "degR": 0.5555556,
    # dim = "Temparaturevariationrate"
    "degK/s": 1.0,
    "degF/s": 0.5555556,
    # dim = "Temparaturegradiant"
    "degK/m": 1.0,
    "degK/km": 0.001,
    "degF/m": 0.5555556,
    "degF/km": 5.555556e-4,
    # dim = "DeciBell"
    "dB": 1.0,
    # dim = "EffectivePerceivedDeciBell"
    "EPNdB": 1.0,
    # dim = "Mass"
    "kg": 1.0,
    "g": 0.001,
    "lb": 0.4535924,
    "lbm": 0.4535924,
    "t": 1000.0,
    "T": 1000.0,
    "metricT": 1000.0,
    # dim = "MassIndex"
    "g/kg": 1.0,
    # dim = "MasstoForceratio"
    "kg/N": 1.0,
    "g/N": 0.001,
    "g/kN": 0.000001,
    "kg/daN": 0.1,
    "kg/kN": 0.001,
    # dim = "SeatKilometer"
    "seat.m": 1.0,
    "seat.km": 1000.0,
    # dim = "MassperSeat"
    "kg/seat": 1.0,
    "g/seat": 0.001,
    # dim = "MassperSeatandperDistance"
    "kg/m/seat": 1.0,
    "kg/NM/seat": 0.000540,
    # dim = "SpecificConsumptionvsThrust"
    "kg/N/s": 1.0,
    "kg/s/N": 1.0,
    "kg/daN/h": 2.77778e-05,
    "kg/h/daN": 2.77778e-05,
    "lb/lbf/h": 0.000028327,
    "lb/h/lbf": 0.000028327,
    # dim = "CruiseSpecificPowerAirRange"
    "m/W": 1.0,
    "NM/kW": 1.852,
    # dim = "SpecificEnergyConsumption"
    "J/N/s": 1.0,
    "kJ/daN/h": 1.0e3,
    "MJ/lbf/h": 1.0e6,
    "kW/daN": 100,
    # dim = "SpecificConsumptionvsPower"
    "kg/W/s": 1.0,
    "g/W/s": 1.0e-3,
    "g/W/h": 1.0e-3 / 3600,
    "g/kW/h": 1.0e-6 / 3600,
    "kg/kW/h": 2.77778e-07,
    "lb/shp/h": 1.68969e-07,
    # dim = "Force"
    "N": 1.0,
    "kN": 1000.0,
    "lbf": 4.4482198,
    "klbf": 4448.2198,
    "daN": 10.0,
    "kgf": 9.8066502,
    # dim = "Pressure"
    "Pa": 1.0,
    "kPa": 1000.0,
    "MPa": 1000000.0,
    "kgf/m2": 9.8066502,
    "atm": 101325.0,
    "bar": 100000.0,
    "mbar": 100.0,
    "psi": 6895.0,
    "N/m2": 1.0,
    "daN/m2": 10.0,
    # dim = "Pressurevariationrate"
    "Pa/s": 1.0,
    "atm/s": 101325.0,
    "bar/s": 100000.0,
    # dim = "VolumetricMass"
    "kg/m3": 1.0,
    "kg/l": 1000.0,
    "lb/ft3": 16.018499,
    # dim = "MassSensitivity"
    "1/kg": 1.0,
    "%/kg": 0.01,
    "%/ton": 0.01 * 0.001,
    # dim = "VolumetricMassFlow"
    "kg/m3/s": 1.0,
    "lb/ft3/s": 16.018499,
    # dim = "StandardUnit"
    "si": 1.0,
    "std": 1.0,
    "uc": 1.0,
    "cu": 1.0,
    # dim = "Angle"
    "rad": 1.0,
    "deg": 0.0174533,
    # dim = "Volume"
    "m3": 1.0,
    "dm3": 0.001,
    "cm3": 0.000001,
    "litres": 0.001,
    "litre": 0.001,
    "l": 0.001,
    "L": 0.001,
    "ft3": 0.0283168,
    # dim = "VolumeFlow"
    "m3/s": 1.0,
    "litre/s": 0.001,
    "l/s": 0.001,
    "L/s": 0.001,
    "ft3/s": 0.0283168,
    "m3/min": 60.0,
    "litre/min": 0.06,
    "l/min": 0.06,
    "L/min": 0.06,
    "ft3/min": 1.699008,
    "m3/h": 3600.0,
    "litre/h": 3.6,
    "l/h": 3.6,
    "L/h": 3.6,
    "ft3/h": 101.94048,
    # dim = "VolumeCoefficient"
    "m2/kN": 1.0,
    # dim = "MachNumber"
    "Mach": 1.0,
    "mach": 1.0,
    # dim = "DragCount"
    "cx": 1.0,
    "dc": 0.0001,
    # dim = "DragSensitivity"
    "1/cx": 1.0,
    "%/cx": 0.01,
    "%/dc": 0.01 * 10000.0,
    # dim = "MachNumbervariationrate"
    "Mach/s": 1.0,
    "mach/s": 1.0,
    # dim = "MassFlow"
    "kg/s": 1.0,
    "kg/h": 0.0002778,
    "lb/s": 0.4535924,
    "kg/min": 0.0166667,
    "lb/min": 0.00756,
    "lb/h": 0.000126,
    # dim = "Power"
    "Watt": 1.0,
    "W": 1.0,
    "kW": 1.0e3,
    "MW": 1.0e6,
    "GW": 1.0e9,
    "TW": 1.0e12,
    "shp": 745.70001,
    # dim = "PowerDensity"
    "W/kg": 1.0,
    "kW/kg": 1.0e3,
    # dim = "PowerDensityPerTime"
    "kW/daN/h": 1 / 36.0,
    # dim = "Euro"
    "E": 1.0,
    "Ec.": 0.01,
    "kE": 1000.0,
    "ME": 1000000.0,
    # dim = "Cost"
    "$": 1.0,
    "$c.": 0.01,
    "k$": 1000.0,
    "M$": 1000000.0,
    # dim = "HourlyCost"
    "$/h": 1.0,
    # dim = "Utilisation"
    "trip/year": 1.0,
    # dim = "TripCost"
    "$/vol": 1.0,
    "$/trip": 1.0,
    # dim = "CosttoDistanceratio"
    "$/km": 1.0,
    "$/NM": 0.5399568,
    # dim = "CostDistancePax"
    "$/km/pax": 1.0,
    "$/NM/pax": 0.5399568,
    # dim = "Lineic"
    "1/m": 1.0,
    # dim = "Viscosity"
    "Poises": 1.0,
    "Pl.10e6": 0.000001,
    # dim = "SpecificCost"
    "$/pax/km": 1.0,
    "$/pax/NM": 0.5399568,
    # dim = "InverseAnglular"
    "1/rad": 1.0,
    "1/deg": 57.29578,
    # dim = "InversesquaredAngular"
    "1/rad2": 1.0,
    # dim = "MassicDistance"
    "m/kg": 1.0,
    "km/t": 1.0,
    "km/kg": 1000.0,
    "NM/t": 1.852,
    "NM/kg": 1852.0,
    "NM/lb": 4082.8923,
    # dim = "EnergyDistance"
    "J/m": 1.0,
    "kWh/km": 3600,
    # dim = "DistanceEnergy"
    "m/J": 1.0,
    "km/kWh": 1 / 3600,
    # dim = "SurfacicMass"
    "kg/m2": 1.0,
    "lb/ft2": 4.8825102,
    # dim = "LineicMass"
    "kg/m": 1.0,
    "kg/km": 0.001,
    "lb/m": 0.4535924,
    # dim = "Momentum"
    "N.m": 1.0,
    "daN.m": 10.0,
    "kgf.m": 9.8066502,
    "lbf.ft": 1.3558174,
    # dim = "InertiaMomentum"
    "kg.m2": 1.0,
    "lb.m2": 0.4535924,
    # dim = "AngularVelocity"
    "rad/s": 1.0,
    "deg/s": 0.0174533,
    "rpm": 0.1047198,
    # dim = "One_over_Second_square"
    "1/s2": 1.0,
    # dim = "AngularAcceleration"
    "rad/s2": 1.0,
    "deg/s2": 0.0174533,
    "rpm/s": 0.1047198,
    # dim = "Energy"
    "J": 1.0,
    "kJ": 1.0e3,
    "MJ": 1.0e6,
    "GJ": 1.0e9,
    "TJ": 1.0e12,
    "Wh": 3600.0,
    "kWh": 3600.0e3,
    "MWh": 3600.0e6,
    "GWh": 3600.0e9,
    "TWh": 3600.0e12,
    # dim = "EnergyDensity"
    "J/kg": 1.0,
    "kJ/kg": 1000.0,
    "MJ/kg": 1000000.0,
    "GJ/kg": 1.0e9,
    "TJ/kg": 1.0e12,
    "Wh/kg": 3600.0,
    "kWh/kg": 3600.0e3,
    "MWh/kg": 3600.0e6,
    "GWh/kg": 3600.0e9,
    "TWh/kg": 3600.0e12,
    "btu/lb": 2325.9612,
    # dim = "FuelCost"
    "$/l": 1.0,
    "$/gal": 0.264173,
    "$/USgal": 0.264173,
    "$/USbrl": 0.00838644,
    # dim = "BatteryMassCost"
    "$/kg": 1.0,
    # dim = "nodimension"
    "sd": 1,
    "adim": 1,
    "no_dim": 1,
    "nd": 1,
    "%": 0.01,
    "%/%": 1.0,
    # dim = "integer"
    "integer": 1,
    "int": 1,
    "entier": 1,
    "numeric": 1,
    # dim = "variouscounts"
    "aircraft": 1,
    "engine": 1,
    "pilot": 1,
    "attendant": 1,
    "trolley": 1,
    "toilet": 1,
    "seat": 1,
    "door": 1,
    "wheel": 1,
    # dim = "string"
    "string": 1,
    "text": 1,
    # dim = "textdate"
    "text_date": 1,
    # dim = "GlobalWarmingEnergy"
    "W/m2/km/year": 1.0,
    "1e-6.W/m2/km/year": 1.0e-6,
    "1e-12.W/m2/km/year": 1.0e-12,
    # dim = "SpecificMassicEmission"
    "Pa.m3/kg": 1.0,
    "bar.l/kg": 100.0,
    # dim = "SpecificMassicEmission"
    "g/seat/m": 1.0,
    "g/seat/km": 0.001,
    # dim = "SpecificVolumicConsumption"
    "m3/seat/m": 1.0,
    "l/seat/100km": 0.01,
    # dim = "CO2metric"
    "kg/m/m^0.48": 1.0,
    "kg/m/m0.48": 1.0,
    "kg/km/m^0.48": 0.001,
    "kg/km/m0.48": 0.001,
    "kg/NM/m^0.48": 1.0 / 1852.0,
    "kg/NM/m0.48": 1.0 / 1852.0,
    # dim = "GlobalWarmingTemperature"
    "K/m2/km/year": 1.0,
    "1e-6.K/m2/km/year": 1.0e-6,
    "1e-12.K/m2/km/year": 1.0e-12,
    # dim = "DataStructure"
    "structure": 1,
    "dict": 1,
    "array": 1,
}
"""Units to SI units."""
